[
    {
        "id": "24dfb8ef33f23156",
        "type": "tab",
        "label": "New Container",
        "disabled": false,
        "info": "Backend Auth",
        "env": []
    },
    {
        "id": "ae588d9b3fae37a1",
        "type": "tab",
        "label": "MQTT EDU",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6f2117e9081c52cf",
        "type": "tab",
        "label": "Change Actual Container",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bbf8bb52d5a439a2",
        "type": "tab",
        "label": "Process",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a4016556e17b5c1d",
        "type": "tab",
        "label": "Config",
        "disabled": false,
        "info": "Backend config ",
        "env": []
    },
    {
        "id": "4e4be63df05180bc",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0851b9d91a4d916f",
        "type": "tab",
        "label": "Lectura",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2c506af3574a58c",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dba4f1ac499b6a24",
        "type": "tab",
        "label": "Register",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fd2c40c2d50b7447",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "101dde30bb281675",
        "type": "tab",
        "label": "JOIN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b975189eeafb751a",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ce4539142712cae",
        "type": "mqtt-broker",
        "name": "server-mqtt",
        "broker": "192.168.192.1",
        "port": "8883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "medicion",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8cc4005609a73937",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.192.1",
        "port": "1883",
        "clientid": "rasp-client",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5dab060f7ebe2415",
        "type": "mongodb-aleph-config",
        "hostname": "cluster0.yfyzb1k.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "",
        "port": "27017",
        "db": "soa",
        "name": ""
    },
    {
        "id": "e2bc7ac9aa77279e",
        "type": "mongodb4-client",
        "name": "simple connection",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "",
        "dbName": "nodered",
        "authSource": "nodered",
        "authMechanism": "SCRAM-SHA-256",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "",
        "advanced": "{\"connectTimeoutMS\": 30000}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "dd0b7f14421d961d",
        "type": "mongodb4-client",
        "name": "advanced connection",
        "protocol": "mongodb",
        "hostname": "",
        "port": "",
        "dbName": "nodered",
        "authSource": "nodered",
        "authMechanism": "SCRAM-SHA-256",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "mongodb://localhost:27017",
        "advanced": "",
        "uriTabActive": "tab-uri-advanced"
    },
    {
        "id": "d1cb3b0cb03de87e",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "cluster0.yfyzb1k.mongodb.net",
        "port": "",
        "dbName": "soa",
        "appName": "",
        "authSource": "",
        "authMechanism": "SCRAM-SHA-256",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "mongodb+srv://root:root@cluster0.yfyzb1k.mongodb.net",
        "advanced": "{}",
        "uriTabActive": "tab-uri-advanced"
    },
    {
        "id": "bc46a78fce45a903",
        "type": "mongodb-config",
        "hostname": "192.168.192.210",
        "port": "27017",
        "db": "soa?authSource=admin",
        "name": ""
    },
    {
        "id": "ce26f499c263739a",
        "type": "mongodb-config",
        "hostname": "192.168.192.189",
        "port": "27017",
        "db": "soa?authSource=admin",
        "name": ""
    },
    {
        "id": "c4d89469b20c0f9e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "17d19835de663e2f",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "358456880232ef9c",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "358456880232ef9c",
        "type": "ui_tab",
        "name": "Menu principal",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "57a3c8c6be82297f",
        "type": "ui_group",
        "name": "Calculos",
        "tab": "358456880232ef9c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6c11394069457fd",
        "type": "http in",
        "z": "24dfb8ef33f23156",
        "name": "RegisterContainer",
        "url": "/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 108,
        "y": 180,
        "wires": [
            [
                "f8de815818511455",
                "7bb3d14fb2f12849"
            ]
        ]
    },
    {
        "id": "36ab463705db8acb",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "name": "Registrar Recipiente",
        "info": "",
        "x": 108,
        "y": 140,
        "wires": []
    },
    {
        "id": "38e05ce339d88f49",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "name": "Altura Inicial",
        "info": "",
        "x": 430,
        "y": 288,
        "wires": []
    },
    {
        "id": "c42a10ba1889a578",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 768,
        "y": 540,
        "wires": []
    },
    {
        "id": "db604851792d6ccd",
        "type": "catch",
        "z": "24dfb8ef33f23156",
        "name": "",
        "scope": [
            "8704dffa14797e95"
        ],
        "uncaught": false,
        "x": 778,
        "y": 486,
        "wires": [
            [
                "c42a10ba1889a578"
            ]
        ]
    },
    {
        "id": "53a920cdc2ec4cec",
        "type": "switch",
        "z": "24dfb8ef33f23156",
        "name": "",
        "property": "payload.result.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 216,
        "wires": [
            [
                "5b903833fadada49"
            ],
            [
                "e40cee6eda6e8e32"
            ]
        ]
    },
    {
        "id": "cf907aebfaff3150",
        "type": "http response",
        "z": "24dfb8ef33f23156",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2002,
        "y": 198,
        "wires": []
    },
    {
        "id": "f8de815818511455",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Clear",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 292,
        "y": 252,
        "wires": [
            [
                "5cef542467b4d6fe"
            ]
        ]
    },
    {
        "id": "a2b65ca3d30e76e6",
        "type": "join",
        "z": "24dfb8ef33f23156",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 180,
        "wires": [
            [
                "b522253d8f34c746"
            ]
        ]
    },
    {
        "id": "de32ce20cf4b3799",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"radio\":50,\"tipo\":\"cilindro\"}",
        "payloadType": "json",
        "x": 302,
        "y": 450,
        "wires": [
            [
                "3fabe802c36e0b3b"
            ]
        ]
    },
    {
        "id": "441163e8c74ef300",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"altura\":40}",
        "payloadType": "json",
        "x": 376,
        "y": 504,
        "wires": [
            [
                "d1da5585e175b94b"
            ]
        ]
    },
    {
        "id": "3fabe802c36e0b3b",
        "type": "json",
        "z": "24dfb8ef33f23156",
        "name": "ToObject",
        "property": "parts",
        "action": "obj",
        "pretty": false,
        "x": 462,
        "y": 450,
        "wires": [
            [
                "d1da5585e175b94b"
            ]
        ]
    },
    {
        "id": "d1da5585e175b94b",
        "type": "join",
        "z": "24dfb8ef33f23156",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 634,
        "y": 450,
        "wires": [
            [
                "26d7655b4557f436"
            ]
        ]
    },
    {
        "id": "26d7655b4557f436",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 786,
        "y": 450,
        "wires": []
    },
    {
        "id": "41c7d863051a4670",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "name": "Test",
        "info": "",
        "x": 292,
        "y": 414,
        "wires": []
    },
    {
        "id": "082ff81b8e5c11a5",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Control",
        "func": "const radio = msg.payload.radio\nconst tipo = msg.payload.tipo\nconst altura = msg.payload.altura\nconst id = msg.payload._id\n\nif(!radio || !tipo || !altura || !id){\n    msg.statusCode = 400\n}else {\n    msg.payload = {\n        \"_id\": id,\n        radio: radio,\n        tipo: tipo,\n        altura: altura\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1122,
        "y": 180,
        "wires": [
            [
                "6f250ffd17df7622"
            ]
        ]
    },
    {
        "id": "6f250ffd17df7622",
        "type": "switch",
        "z": "24dfb8ef33f23156",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1264,
        "y": 180,
        "wires": [
            [
                "78e0dcd76643e9e8"
            ],
            [
                "b40b81c5ddb5b9d7"
            ]
        ]
    },
    {
        "id": "78e0dcd76643e9e8",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Bad Request`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 162,
        "wires": [
            [
                "cf907aebfaff3150"
            ]
        ]
    },
    {
        "id": "e40cee6eda6e8e32",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Bad Request`\n}\nmsg.statusCode = 400\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 234,
        "wires": [
            [
                "cf907aebfaff3150"
            ]
        ]
    },
    {
        "id": "e669bbeafb4afcca",
        "type": "mongodb-node",
        "z": "24dfb8ef33f23156",
        "mongodb": "ce26f499c263739a",
        "name": "Insert",
        "collection": "container",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 594,
        "y": 630,
        "wires": [
            [
                "7d227760db11ef30"
            ]
        ]
    },
    {
        "id": "476e2c89e8b540e2",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 268,
        "y": 630,
        "wires": [
            [
                "e0d18f11cbfee83e"
            ]
        ]
    },
    {
        "id": "7d227760db11ef30",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 630,
        "wires": []
    },
    {
        "id": "e0d18f11cbfee83e",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "insert",
        "func": "msg.payload = [{ _id: \"1234\", name: 'Anna', age: 1 }];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 630,
        "wires": [
            [
                "e669bbeafb4afcca"
            ]
        ]
    },
    {
        "id": "8be724f883e9b217",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 684,
        "wires": []
    },
    {
        "id": "97d206b39d0d62c3",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 276,
        "y": 684,
        "wires": [
            [
                "39b0262041a8faa3"
            ]
        ]
    },
    {
        "id": "39b0262041a8faa3",
        "type": "mongodb-node",
        "z": "24dfb8ef33f23156",
        "mongodb": "ce26f499c263739a",
        "name": "Buscar Todos",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 480,
        "y": 684,
        "wires": [
            [
                "8be724f883e9b217"
            ]
        ]
    },
    {
        "id": "9dc130e679624321",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 264,
        "y": 756,
        "wires": [
            [
                "eb9250ed8d5fa23c"
            ]
        ]
    },
    {
        "id": "eb9250ed8d5fa23c",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Generate ID",
        "func": "const generarId = () => {           //Generar token aleatorio\n    const random = Math.random().toString(32).substring(2);\n    const fecha = Date.now().toString(32);\n    return random + fecha;\n}\n\nmsg.payload = generarId()\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 756,
        "wires": [
            [
                "45fd1215a0e3d612"
            ]
        ]
    },
    {
        "id": "45fd1215a0e3d612",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 588,
        "y": 756,
        "wires": []
    },
    {
        "id": "7bb3d14fb2f12849",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Generate ID",
        "func": "const generarId = () => {           //Generar token aleatorio\n    const random = Math.random().toString(32).substring(2);\n    const fecha = Date.now().toString(32);\n    return random + fecha;\n}\n\nmsg.payload._id = generarId()\nmsg.topic = \"id\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "a2b65ca3d30e76e6"
            ]
        ]
    },
    {
        "id": "5cef542467b4d6fe",
        "type": "exec",
        "z": "24dfb8ef33f23156",
        "command": "python /data/distance.py",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Altura promedio",
        "x": 440,
        "y": 252,
        "wires": [
            [
                "d6b07c61ca794bdc"
            ],
            [],
            []
        ]
    },
    {
        "id": "0acc33ab37b70a81",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Armar",
        "func": "\n\nmsg.topic = \"altura\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 706,
        "y": 234,
        "wires": [
            [
                "a2b65ca3d30e76e6"
            ]
        ]
    },
    {
        "id": "d6b07c61ca794bdc",
        "type": "json",
        "z": "24dfb8ef33f23156",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 234,
        "wires": [
            [
                "0acc33ab37b70a81"
            ]
        ]
    },
    {
        "id": "b40b81c5ddb5b9d7",
        "type": "mongodb-node",
        "z": "24dfb8ef33f23156",
        "mongodb": "ce26f499c263739a",
        "name": "Insert",
        "collection": "container",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 1426,
        "y": 216,
        "wires": [
            [
                "53a920cdc2ec4cec"
            ]
        ]
    },
    {
        "id": "976012fd1e2d5b28",
        "type": "join",
        "z": "24dfb8ef33f23156",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1408,
        "y": 486,
        "wires": [
            [
                "9dce77985314dd34"
            ]
        ]
    },
    {
        "id": "af93c89ea0ec0c19",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "2",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "final",
        "payload": "{\"altura\":40}",
        "payloadType": "json",
        "x": 1160,
        "y": 540,
        "wires": [
            [
                "976012fd1e2d5b28"
            ]
        ]
    },
    {
        "id": "9dce77985314dd34",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 486,
        "wires": []
    },
    {
        "id": "299e6da9ad5e8082",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "inicio",
        "payload": "{\"radio\":50,\"tipo\":\"cilindro\"}",
        "payloadType": "json",
        "x": 1166,
        "y": 486,
        "wires": [
            [
                "976012fd1e2d5b28"
            ]
        ]
    },
    {
        "id": "b522253d8f34c746",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Armar",
        "func": "let inicial = msg.payload.id\ninicial.altura = msg.payload.altura\nmsg.payload = inicial\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 976,
        "y": 180,
        "wires": [
            [
                "082ff81b8e5c11a5"
            ]
        ]
    },
    {
        "id": "5b903833fadada49",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Armo Respuesta",
        "func": "const id = msg.payload.ops[0]._id\nmsg.payload = {\n    \"_id\": id\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1782,
        "y": 198,
        "wires": [
            [
                "cf907aebfaff3150"
            ]
        ]
    },
    {
        "id": "3abdef68e06537c7",
        "type": "Bme280",
        "z": "24dfb8ef33f23156",
        "name": "",
        "bus": "1",
        "address": "0x76",
        "topic": "bme280",
        "extra": false,
        "x": 480,
        "y": 108,
        "wires": [
            [
                "6cf3e80b50bb86ff"
            ]
        ]
    },
    {
        "id": "637860d59ab03272",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "name": "Temperatura Inicial",
        "info": "",
        "x": 486,
        "y": 72,
        "wires": []
    },
    {
        "id": "e179433c1daa3216",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 108,
        "wires": [
            [
                "3abdef68e06537c7"
            ]
        ]
    },
    {
        "id": "6cf3e80b50bb86ff",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 108,
        "wires": []
    },
    {
        "id": "992c68eaf7bee79d",
        "type": "mqtt in",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "topic": "Mediciones",
        "qos": "2",
        "datatype": "utf8",
        "broker": "8cc4005609a73937",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 540,
        "wires": [
            [
                "7990cab44ba77539"
            ]
        ]
    },
    {
        "id": "69429cdb3d5cde43",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1218,
        "y": 270,
        "wires": []
    },
    {
        "id": "7990cab44ba77539",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 258,
        "y": 540,
        "wires": [
            [
                "16f30e7171618337"
            ]
        ]
    },
    {
        "id": "398fd7c154a5c79a",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "calcular nivel",
        "func": "const contenedor = global.get('container')\nif(contenedor.primera){\n    msg.payload.nivel = 0\n    return msg\n}\nmsg.payload.nivel = contenedor.altura - msg.payload.distancia\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 592,
        "y": 576,
        "wires": [
            [
                "01d9d2d50b595f38",
                "117224e504b86535"
            ]
        ]
    },
    {
        "id": "272c41bf8bb54b83",
        "type": "http response",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 292,
        "y": 36,
        "wires": []
    },
    {
        "id": "65c9394d079a0565",
        "type": "mqtt in",
        "z": "ae588d9b3fae37a1",
        "name": "Medicion Recibida",
        "topic": "Mediciones",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4ce4539142712cae",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 126,
        "y": 144,
        "wires": [
            [
                "79b8cf6050615421",
                "59311a42c5d41eac"
            ]
        ]
    },
    {
        "id": "79b8cf6050615421",
        "type": "json",
        "z": "ae588d9b3fae37a1",
        "name": "ToObject",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 300,
        "y": 144,
        "wires": [
            [
                "a85e73e8f916ae3b"
            ]
        ]
    },
    {
        "id": "a85e73e8f916ae3b",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Armar Objeto",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 462,
        "y": 144,
        "wires": [
            [
                "4964f264b49a655e"
            ]
        ]
    },
    {
        "id": "4964f264b49a655e",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Nivel",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 144,
        "wires": [
            [
                "117d7ddcdafa18e5"
            ]
        ]
    },
    {
        "id": "117d7ddcdafa18e5",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Volumen",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 144,
        "wires": [
            [
                "d1dec5cbc5a17379"
            ]
        ]
    },
    {
        "id": "d1dec5cbc5a17379",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Caudal",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1018,
        "y": 144,
        "wires": [
            [
                "6228e6de638598d7"
            ]
        ]
    },
    {
        "id": "6228e6de638598d7",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular ETA",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1186,
        "y": 144,
        "wires": [
            [
                "6c39975b507e948a"
            ]
        ]
    },
    {
        "id": "6c39975b507e948a",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Estado",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1358,
        "y": 144,
        "wires": [
            [
                "8542df6e2d053be6"
            ]
        ]
    },
    {
        "id": "d4e2576eafd15880",
        "type": "switch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2092,
        "y": 126,
        "wires": [
            [
                "a0b59973484a7cbe"
            ],
            []
        ]
    },
    {
        "id": "a0b59973484a7cbe",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Alertar",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 54,
        "wires": [
            [
                "d44ff31fabb2a1eb"
            ]
        ]
    },
    {
        "id": "d44ff31fabb2a1eb",
        "type": "e-mail",
        "z": "ae588d9b3fae37a1",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2354,
        "y": 54,
        "wires": []
    },
    {
        "id": "8542df6e2d053be6",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Armar Objeto Medicion",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1556,
        "y": 144,
        "wires": [
            []
        ]
    },
    {
        "id": "782cca0314155811",
        "type": "switch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1922,
        "y": 144,
        "wires": [
            [
                "d4e2576eafd15880"
            ],
            [
                "6f275397062b7218"
            ]
        ]
    },
    {
        "id": "893234419161d13c",
        "type": "comment",
        "z": "ae588d9b3fae37a1",
        "name": "OK",
        "info": "",
        "x": 1922,
        "y": 90,
        "wires": []
    },
    {
        "id": "d8bd1abf5ea19c9e",
        "type": "comment",
        "z": "ae588d9b3fae37a1",
        "name": "ERROR",
        "info": "",
        "x": 1924,
        "y": 198,
        "wires": []
    },
    {
        "id": "537759f0c8b981ca",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1794,
        "y": 234,
        "wires": []
    },
    {
        "id": "26a844e560d8c44a",
        "type": "catch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "scope": [
            "88be844be19fc97d"
        ],
        "uncaught": false,
        "x": 1648,
        "y": 234,
        "wires": [
            [
                "537759f0c8b981ca"
            ]
        ]
    },
    {
        "id": "6f275397062b7218",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 216,
        "wires": []
    },
    {
        "id": "59311a42c5d41eac",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 198,
        "wires": []
    },
    {
        "id": "85f1641234890e06",
        "type": "comment",
        "z": "ae588d9b3fae37a1",
        "name": "TODO",
        "info": "SACAR TODA LA INFO DEL BALDE",
        "x": 184,
        "y": 414,
        "wires": []
    },
    {
        "id": "264542925e9f50a5",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Volumen",
        "func": "//Calculate Volume\nconst getVolume = (container, level, temperature) => {\n    const beta = 0.00021\n    let volume\n    let temperatureI\n    if (container.measurements.length > 0)\n        temperatureI = container.lastMeasurement.temperature\n    else\n        temperatureI = container.roomTemperature\n\n    if (container.geometry === \"Cylinder\") {\n        //TODO:\n        //Check\n        volume = Math.PI * (container.radius ** 2) * level * (1 + beta * (temperature - temperatureI))\n    } else if (container.geometry === \"Cube\") {\n        volume = container.sides[0] * container.sides[1] * level * (1 + beta * (temperature - temperatureI))\n    }\n    return volume\n}\nmsg.payload.volume = getVolume(\"Cylinder\", msg.payload.nivel, msg.payload.temperatura);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1044,
        "y": 270,
        "wires": [
            [
                "69429cdb3d5cde43"
            ]
        ]
    },
    {
        "id": "c5b0ab69eeb2efcd",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Update",
        "func": "var newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: \"6483d3ff04e0120007621e30\"\n    },\n    'payload': { \n        $push: {   \n            \"mediciones\" : 10 \n        },\n        $set: {\n            \"ultimaMedicion\": 10\n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 318,
        "y": 900,
        "wires": [
            [
                "a7520e3f89e34389"
            ]
        ]
    },
    {
        "id": "a7520e3f89e34389",
        "type": "mongodb-node",
        "z": "ae588d9b3fae37a1",
        "mongodb": "ce26f499c263739a",
        "name": "Update",
        "collection": "container",
        "operation": "update",
        "upsert": false,
        "multi": false,
        "x": 480,
        "y": 900,
        "wires": [
            [
                "fb1491587a52ca95"
            ]
        ]
    },
    {
        "id": "117224e504b86535",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Volumen",
        "func": "const contenedor = global.get('container')\n\nconst beta = 0.00021\nlet volume\nlet temperaturaI\n\nif(contenedor.primera){\n    msg.payload.volumen = 0\n    return msg\n}  \nelse {\n    temperaturaI = contenedor.ultima.temperatura\n    if(contenedor.tipo === \"tacho\"){\n        volume = Math.PI * (contenedor.radio ** 2) * msg.payload.nivel * (1 + beta * (msg.payload.temperatura - temperaturaI)) \n    }else{\n        //TODO Cubo\n    }\n}\n\nmsg.payload.volumen = volume\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 792,
        "y": 576,
        "wires": [
            [
                "c010df3fd2223678"
            ]
        ]
    },
    {
        "id": "261cccdf8c6d40f6",
        "type": "switch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "container.primera",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1318,
        "y": 864,
        "wires": [
            [
                "8fbcc098ba30ddf7"
            ],
            []
        ]
    },
    {
        "id": "2228421e38155c5d",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Update",
        "func": "const contenedor = global.get('container')\n\nvar newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: contenedor._id\n    },\n    'payload': { \n        \n        $set: {\n            \"altura\": msg.payload.distancia,\n            \"temperatura\": msg.payload.temperatura\n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "292a542f4611910f",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Update",
        "func": "var newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: \"6483d3ff04e0120007621e30\"\n    },\n    'payload': { \n        $push: {   \n            \"mediciones\" : msg.payload.medicion \n        },\n        $set: {\n            \"ultimaMedicion\": msg.payload.medicion \n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1674,
        "y": 306,
        "wires": [
            []
        ]
    },
    {
        "id": "4778590decbdddbe",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Armar objeto",
        "func": "const medicion = {\n    \"nivel\": msg.payload.nivel,\n    \"volumen\": msg.payload.volumen,\n    \"ETA\": msg.payload.eta,\n    \"caudal\": msg.payload.caudal,\n    \"estado\": msg.payload.estado\n}\n\nmsg.payload.medicion = medicion\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 288,
        "wires": [
            [
                "292a542f4611910f"
            ]
        ]
    },
    {
        "id": "13f137f95ca6c051",
        "type": "change",
        "z": "ae588d9b3fae37a1",
        "name": "Ultima Medicion",
        "rules": [
            {
                "t": "set",
                "p": "container.medicion",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container.primera",
                "pt": "global",
                "to": "false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1492,
        "y": 234,
        "wires": [
            []
        ]
    },
    {
        "id": "01d9d2d50b595f38",
        "type": "link out",
        "z": "ae588d9b3fae37a1",
        "name": "Nivel",
        "mode": "link",
        "links": [
            "fcd2dd966646f325"
        ],
        "x": 591,
        "y": 648,
        "wires": []
    },
    {
        "id": "8fbcc098ba30ddf7",
        "type": "change",
        "z": "ae588d9b3fae37a1",
        "name": "Primera",
        "rules": [
            {
                "t": "set",
                "p": "container.primera",
                "pt": "global",
                "to": "false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1518,
        "y": 882,
        "wires": [
            []
        ]
    },
    {
        "id": "d0c1b5f32edbb270",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Update",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 864,
        "wires": [
            []
        ]
    },
    {
        "id": "c010df3fd2223678",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Caudal",
        "func": "const contenedor = global.get('container')\nlet volumeI\nlet currentTime = Date.now()\nlet timeI\nlet caudal = 0\n\nif(contenedor.primera){\n    msg.payload.caudal = 0\n    return msg\n}  \nelse {\n    volumeI = contenedor.ultima.volumen\n    timeI = contenedor.ultima.tiempo\n    caudal = Math.abs(msg.payload.volumen - volumeI) / Math.abs(currentTime - timeI) / 1000;\n}\n\nmsg.payload.caudal = caudal\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 576,
        "wires": [
            [
                "e935e1206b5696f8"
            ]
        ]
    },
    {
        "id": "e935e1206b5696f8",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular ETA",
        "func": "const contenedor = global.get('container')\n\nlet eta = 0;\n\nif(contenedor.primera){\n    msg.payload.eta = 0\n    return msg\n}  \nelse {\n    const beta = 0.00021\n    let volume\n    let temperaturaI\n    temperaturaI = contenedor.ultima.temperatura\n    if (contenedor.tipo === \"cilindro\") {\n        volume = Math.PI * (contenedor.radio ** 2) * contenedor.altura * (1 + beta * (msg.payload.temperatura - temperaturaI))\n    } else {\n        //TODO Cubo\n    }\n    if(msg.payload.caudal != 0){\n        eta = volume / msg.payload.caudal;\n    }else{\n        eta = 0\n    }\n\n}\n\nmsg.payload.eta = eta\nreturn msg;\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1172,
        "y": 576,
        "wires": [
            [
                "be6dc0ec1b17542c"
            ]
        ]
    },
    {
        "id": "be6dc0ec1b17542c",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Calcular Estado",
        "func": "const contenedor = global.get('container')\n\nlet levelMax = contenedor.altura\nlet low = levelMax / 4\nlet lowLow = levelMax / 8\nlet high = levelMax * 3 / 4\nlet highHigh = levelMax * 7 / 8\nlet estado\n\nif(contenedor.primera){\n    msg.payload.estado = 0\n    return msg\n}  \nelse {\n    let lastState = contenedor.ultima.estado\n    const level = msg.payload.nivel\n    //Normal, no alert\n    if (level >= low && level <= high)\n        estado = \"Normal\"\n    //Low Low\n    if (level < lowLow) {\n        if (lastState !== \"Low-Low\")\n            estado = \"Low-Low\"\n    }\n    //Low\n    if (level < low) {\n        if (lastState !== \"Low\")\n            estado = \"Low\"\n    }\n    //High High\n    if (level > highHigh) {\n        if (lastState !== \"High-High\")\n            estado = \"High-High\"\n    }\n    //High\n    if (level > high) {\n        if (lastState !== \"High\")\n            estado = \"High\"\n    }\n\n}\n\nmsg.payload.estado = estado\nreturn msg;\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1358,
        "y": 576,
        "wires": [
            [
                "cffca188f996e5f6"
            ]
        ]
    },
    {
        "id": "cffca188f996e5f6",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Armar objeto",
        "func": "let currentTime = Date.now()\nconst medicion = {\n    \"nivel\": msg.payload.nivel,\n    \"volumen\": msg.payload.volumen,\n    \"ETA\": msg.payload.eta,\n    \"caudal\": msg.payload.caudal,\n    \"estado\": msg.payload.estado,\n    \"temperatura\":msg.payload.temperatura,\n    \"tiempo\": currentTime\n}\nmsg.topic = \"inicial\"\nmsg.payload.medicion = medicion\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1532,
        "y": 576,
        "wires": [
            [
                "2614e54fb8a332d7",
                "341d6a0613209ac4"
            ]
        ]
    },
    {
        "id": "16f30e7171618337",
        "type": "switch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "container.primera",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 428,
        "y": 504,
        "wires": [
            [
                "0788541e16ec93e4",
                "97d5a4872625b3ec"
            ],
            [
                "398fd7c154a5c79a"
            ]
        ]
    },
    {
        "id": "67d397237c754ae9",
        "type": "change",
        "z": "ae588d9b3fae37a1",
        "name": "Primera",
        "rules": [
            {
                "t": "set",
                "p": "container.primera",
                "pt": "global",
                "to": "false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "container.temperatura",
                "pt": "global",
                "to": "payload.inicial.temperatura",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container.altura",
                "pt": "global",
                "to": "payload.inicial.distancia",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 414,
        "wires": [
            [
                "b9a9871933956357"
            ]
        ]
    },
    {
        "id": "97d5a4872625b3ec",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Update",
        "func": "const contenedor = global.get('container')\n\nvar newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: contenedor._id\n    },\n    'payload': {    \n        $set: {\n            \"altura\": msg.payload.distancia,\n            \"temperatura\": msg.payload.temperatura\n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 678,
        "y": 486,
        "wires": [
            [
                "4f54c4f907ce8495"
            ]
        ]
    },
    {
        "id": "2614e54fb8a332d7",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Update",
        "func": "var newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: \"6483d3ff04e0120007621e30\"\n    },\n    'payload': { \n        $push: {   \n            \"mediciones\" : msg.payload.medicion\n        },\n        $set: {\n            \"ultimaMedicion\": msg.payload.medicion\n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1698,
        "y": 522,
        "wires": [
            [
                "3f379c851dad510c"
            ]
        ]
    },
    {
        "id": "4f54c4f907ce8495",
        "type": "mongodb-node",
        "z": "ae588d9b3fae37a1",
        "mongodb": "ce26f499c263739a",
        "name": "Update",
        "collection": "container",
        "operation": "update",
        "upsert": false,
        "multi": false,
        "x": 816,
        "y": 486,
        "wires": [
            [
                "9a05ebef32842a9f"
            ]
        ]
    },
    {
        "id": "3f379c851dad510c",
        "type": "mongodb-node",
        "z": "ae588d9b3fae37a1",
        "mongodb": "ce26f499c263739a",
        "name": "Update",
        "collection": "container",
        "operation": "update",
        "upsert": false,
        "multi": false,
        "x": 1848,
        "y": 522,
        "wires": [
            [
                "1e273ddbc8b43d3a"
            ]
        ]
    },
    {
        "id": "39032ebd61a6adfa",
        "type": "inject",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 810,
        "wires": [
            [
                "c5b0ab69eeb2efcd"
            ]
        ]
    },
    {
        "id": "e585be5a50c6bd89",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 624,
        "y": 810,
        "wires": [
            []
        ]
    },
    {
        "id": "fb1491587a52ca95",
        "type": "json",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 490,
        "y": 810,
        "wires": [
            [
                "e585be5a50c6bd89"
            ]
        ]
    },
    {
        "id": "9a05ebef32842a9f",
        "type": "json",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 940,
        "y": 486,
        "wires": [
            [
                "ebca2435e78c8506"
            ]
        ]
    },
    {
        "id": "ebca2435e78c8506",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\nmsg.topic = \"response\"\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1068,
        "y": 486,
        "wires": [
            [
                "c9ebf2ea9b954364"
            ]
        ]
    },
    {
        "id": "c749fa063525f581",
        "type": "switch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload.response.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1372,
        "y": 450,
        "wires": [
            [
                "67d397237c754ae9"
            ],
            [
                "a6c25776d746e1b6"
            ]
        ]
    },
    {
        "id": "a6c25776d746e1b6",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Update Error`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1592,
        "y": 468,
        "wires": [
            [
                "8ea5553d0d298f58"
            ]
        ]
    },
    {
        "id": "8ea5553d0d298f58",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 468,
        "wires": []
    },
    {
        "id": "c9ebf2ea9b954364",
        "type": "join",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1210,
        "y": 450,
        "wires": [
            [
                "c749fa063525f581"
            ]
        ]
    },
    {
        "id": "0788541e16ec93e4",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "function 7",
        "func": "msg.topic = \"inicial\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 414,
        "wires": [
            [
                "c9ebf2ea9b954364"
            ]
        ]
    },
    {
        "id": "9365379bf8a2a596",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 426,
        "y": 612,
        "wires": []
    },
    {
        "id": "341d6a0613209ac4",
        "type": "join",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2290,
        "y": 576,
        "wires": [
            [
                "6b10a921aa8102b4"
            ]
        ]
    },
    {
        "id": "1e273ddbc8b43d3a",
        "type": "json",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1984,
        "y": 522,
        "wires": [
            [
                "a55530c27f666fab"
            ]
        ]
    },
    {
        "id": "a55530c27f666fab",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\nmsg.topic = \"response\"\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2118,
        "y": 522,
        "wires": [
            [
                "341d6a0613209ac4"
            ]
        ]
    },
    {
        "id": "6b10a921aa8102b4",
        "type": "switch",
        "z": "ae588d9b3fae37a1",
        "name": "",
        "property": "payload.response.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2434,
        "y": 576,
        "wires": [
            [
                "2d3bebef2ddfe095"
            ],
            [
                "7d1d4428a0b72f51"
            ]
        ]
    },
    {
        "id": "7d1d4428a0b72f51",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Update Error`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2638,
        "y": 612,
        "wires": [
            [
                "2a2629d7e170136f"
            ]
        ]
    },
    {
        "id": "2a2629d7e170136f",
        "type": "debug",
        "z": "ae588d9b3fae37a1",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2832,
        "y": 612,
        "wires": []
    },
    {
        "id": "2d3bebef2ddfe095",
        "type": "change",
        "z": "ae588d9b3fae37a1",
        "name": "Actualizar",
        "rules": [
            {
                "t": "set",
                "p": "container.ultima",
                "pt": "global",
                "to": "payload.inicial.medicion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2604,
        "y": 540,
        "wires": [
            [
                "96888705c3e7a435"
            ]
        ]
    },
    {
        "id": "96888705c3e7a435",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Alertar",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2758,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "510d9a226ec56fbf",
        "type": "change",
        "z": "ae588d9b3fae37a1",
        "name": "Actualizar",
        "rules": [
            {
                "t": "set",
                "p": "container.ultima",
                "pt": "global",
                "to": "payload.medicion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1848,
        "y": 414,
        "wires": [
            []
        ]
    },
    {
        "id": "b9a9871933956357",
        "type": "function",
        "z": "ae588d9b3fae37a1",
        "name": "Tiempo",
        "func": "let currentTime = Date.now()\nconst medicion = {\n    \"nivel\": 0,\n    \"volumen\": 0,\n    \"ETA\": 0,\n    \"caudal\": 0,\n    \"estado\": 0,\n    \"temperatura\": msg.payload.inicial.temperatura,\n    \"tiempo\": currentTime\n}\nmsg.payload.medicion = medicion\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1704,
        "y": 414,
        "wires": [
            [
                "510d9a226ec56fbf"
            ]
        ]
    },
    {
        "id": "0d27d53123a1bbed",
        "type": "inject",
        "z": "6f2117e9081c52cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "container",
        "payloadType": "global",
        "x": 172,
        "y": 288,
        "wires": [
            [
                "3032be3270e5c760"
            ]
        ]
    },
    {
        "id": "3032be3270e5c760",
        "type": "debug",
        "z": "6f2117e9081c52cf",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 374,
        "y": 288,
        "wires": []
    },
    {
        "id": "625feb44002a34a5",
        "type": "debug",
        "z": "6f2117e9081c52cf",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 566,
        "y": 324,
        "wires": []
    },
    {
        "id": "43504d1d4acde086",
        "type": "inject",
        "z": "6f2117e9081c52cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 152,
        "y": 324,
        "wires": [
            [
                "d7aab90e7576d914"
            ]
        ]
    },
    {
        "id": "6d1171f8a6947e64",
        "type": "comment",
        "z": "6f2117e9081c52cf",
        "name": "Test",
        "info": "",
        "x": 112,
        "y": 252,
        "wires": []
    },
    {
        "id": "8d548b6e221babc1",
        "type": "mongodb-node",
        "z": "6f2117e9081c52cf",
        "mongodb": "ce26f499c263739a",
        "name": "Buscar ID",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 282,
        "y": 108,
        "wires": [
            [
                "7293939f3e187b8f"
            ]
        ]
    },
    {
        "id": "6bd21c5006458b5c",
        "type": "http in",
        "z": "6f2117e9081c52cf",
        "name": "ChangeContainer",
        "url": "/change",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 118,
        "y": 108,
        "wires": [
            [
                "8d548b6e221babc1"
            ]
        ]
    },
    {
        "id": "ba4fda0947ea90bf",
        "type": "debug",
        "z": "6f2117e9081c52cf",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 282,
        "y": 198,
        "wires": []
    },
    {
        "id": "09647057c5dbe213",
        "type": "catch",
        "z": "6f2117e9081c52cf",
        "name": "",
        "scope": [
            "8d548b6e221babc1"
        ],
        "uncaught": false,
        "x": 274,
        "y": 144,
        "wires": [
            [
                "ba4fda0947ea90bf"
            ]
        ]
    },
    {
        "id": "7293939f3e187b8f",
        "type": "function",
        "z": "6f2117e9081c52cf",
        "name": "To object",
        "func": "const container = {\n    \"container\": msg.payload[0]\n}\nmsg.payload = container\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 426,
        "y": 108,
        "wires": [
            [
                "868ac3f382160896"
            ]
        ]
    },
    {
        "id": "868ac3f382160896",
        "type": "switch",
        "z": "6f2117e9081c52cf",
        "name": "",
        "property": "payload.container",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 562,
        "y": 108,
        "wires": [
            [
                "2922916575d2fbac"
            ],
            [
                "c4f65e8b745f188a"
            ]
        ]
    },
    {
        "id": "2922916575d2fbac",
        "type": "function",
        "z": "6f2117e9081c52cf",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Container no encontrado`\n}\nmsg.statusCode = 404\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 838,
        "y": 72,
        "wires": [
            [
                "8d436f8455148d8c"
            ]
        ]
    },
    {
        "id": "c4f65e8b745f188a",
        "type": "change",
        "z": "6f2117e9081c52cf",
        "name": "Actual Container",
        "rules": [
            {
                "t": "set",
                "p": "container",
                "pt": "global",
                "to": "payload.container",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 738,
        "y": 126,
        "wires": [
            [
                "3fc9484950c5daec"
            ]
        ]
    },
    {
        "id": "58335f524a98764c",
        "type": "function",
        "z": "6f2117e9081c52cf",
        "name": "Armo Respuesta",
        "func": "const id = msg.payload.container._id\nmsg.payload = {\n    \"_id\": id\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1008,
        "y": 144,
        "wires": [
            [
                "8d436f8455148d8c"
            ]
        ]
    },
    {
        "id": "8d436f8455148d8c",
        "type": "http response",
        "z": "6f2117e9081c52cf",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1120,
        "y": 72,
        "wires": []
    },
    {
        "id": "d7aab90e7576d914",
        "type": "mongodb-node",
        "z": "6f2117e9081c52cf",
        "mongodb": "ce26f499c263739a",
        "name": "Buscar Todos",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 356,
        "y": 324,
        "wires": [
            [
                "625feb44002a34a5"
            ]
        ]
    },
    {
        "id": "3fc9484950c5daec",
        "type": "change",
        "z": "6f2117e9081c52cf",
        "name": "Actual Container",
        "rules": [
            {
                "t": "set",
                "p": "container.primera",
                "pt": "global",
                "to": "true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 792,
        "y": 198,
        "wires": [
            [
                "58335f524a98764c"
            ]
        ]
    },
    {
        "id": "dadbcb711da7a4cc",
        "type": "http in",
        "z": "bbf8bb52d5a439a2",
        "name": "StartProcess",
        "url": "/start",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 90,
        "wires": [
            [
                "fb58b1903405994a",
                "732c148457f356ea"
            ]
        ]
    },
    {
        "id": "fb58b1903405994a",
        "type": "mqtt out",
        "z": "bbf8bb52d5a439a2",
        "name": "IniciarMediciones",
        "topic": "start",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4ce4539142712cae",
        "x": 348,
        "y": 90,
        "wires": []
    },
    {
        "id": "7c7593ac6bba6c56",
        "type": "http in",
        "z": "bbf8bb52d5a439a2",
        "name": "StopProcess",
        "url": "/stop",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 144,
        "wires": [
            [
                "4a29f74f9f0f2fed",
                "d7dc1a02e415a809"
            ]
        ]
    },
    {
        "id": "732c148457f356ea",
        "type": "http response",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 268,
        "y": 54,
        "wires": []
    },
    {
        "id": "4a29f74f9f0f2fed",
        "type": "mqtt out",
        "z": "bbf8bb52d5a439a2",
        "name": "DetenerMediciones",
        "topic": "stop",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4ce4539142712cae",
        "x": 348,
        "y": 144,
        "wires": []
    },
    {
        "id": "d7dc1a02e415a809",
        "type": "http response",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 274,
        "y": 216,
        "wires": []
    },
    {
        "id": "ee5e3c9456114308",
        "type": "mqtt in",
        "z": "bbf8bb52d5a439a2",
        "name": "Medicion Recibida",
        "topic": "Mediciones",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4ce4539142712cae",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 108,
        "y": 324,
        "wires": [
            [
                "c6df7f9f0175a190",
                "daa23b90f77653e8"
            ]
        ]
    },
    {
        "id": "c6df7f9f0175a190",
        "type": "json",
        "z": "bbf8bb52d5a439a2",
        "name": "ToObject",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 282,
        "y": 324,
        "wires": [
            [
                "ddd08b9f4a5de3ba"
            ]
        ]
    },
    {
        "id": "ddd08b9f4a5de3ba",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Armar Objeto",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 444,
        "y": 324,
        "wires": [
            [
                "0320ed9773a6de91"
            ]
        ]
    },
    {
        "id": "0320ed9773a6de91",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Calcular Nivel",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 622,
        "y": 324,
        "wires": [
            [
                "fdc753b613e58169"
            ]
        ]
    },
    {
        "id": "fdc753b613e58169",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Calcular Volumen",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 324,
        "wires": [
            [
                "b83509224d9540a4"
            ]
        ]
    },
    {
        "id": "b83509224d9540a4",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Calcular Caudal",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 324,
        "wires": [
            [
                "27e8cf82469bedcc"
            ]
        ]
    },
    {
        "id": "27e8cf82469bedcc",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Calcular ETA",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1168,
        "y": 324,
        "wires": [
            [
                "9ae9a9ca5279617c"
            ]
        ]
    },
    {
        "id": "9ae9a9ca5279617c",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Calcular Estado",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 324,
        "wires": [
            [
                "7b747cdb3ee7e528"
            ]
        ]
    },
    {
        "id": "327b2e23c3c09f1b",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2074,
        "y": 306,
        "wires": [
            [
                "1fd8aa95148044ee"
            ],
            []
        ]
    },
    {
        "id": "1fd8aa95148044ee",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Alertar",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2192,
        "y": 234,
        "wires": [
            [
                "62f32c5fa338d754"
            ]
        ]
    },
    {
        "id": "62f32c5fa338d754",
        "type": "e-mail",
        "z": "bbf8bb52d5a439a2",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2336,
        "y": 234,
        "wires": []
    },
    {
        "id": "7b747cdb3ee7e528",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Armar Objeto Medicion",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1538,
        "y": 324,
        "wires": [
            [
                "15f381c645f32740"
            ]
        ]
    },
    {
        "id": "15f381c645f32740",
        "type": "mongodb-node",
        "z": "bbf8bb52d5a439a2",
        "mongodb": "bc46a78fce45a903",
        "name": "Insert Medicion",
        "collection": "container",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 1738,
        "y": 324,
        "wires": [
            [
                "8dcf9577c1559022"
            ]
        ]
    },
    {
        "id": "8dcf9577c1559022",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1904,
        "y": 324,
        "wires": [
            [
                "327b2e23c3c09f1b"
            ],
            [
                "1c33c197edca5ed8"
            ]
        ]
    },
    {
        "id": "0905e97f22e2172d",
        "type": "comment",
        "z": "bbf8bb52d5a439a2",
        "name": "OK",
        "info": "",
        "x": 1904,
        "y": 270,
        "wires": []
    },
    {
        "id": "f2423d3f5ab481e6",
        "type": "comment",
        "z": "bbf8bb52d5a439a2",
        "name": "ERROR",
        "info": "",
        "x": 1906,
        "y": 378,
        "wires": []
    },
    {
        "id": "fe3b17ba74ee5479",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1716,
        "y": 486,
        "wires": []
    },
    {
        "id": "23b499cf9e60973f",
        "type": "catch",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "scope": [
            "15f381c645f32740"
        ],
        "uncaught": false,
        "x": 1570,
        "y": 486,
        "wires": [
            [
                "fe3b17ba74ee5479"
            ]
        ]
    },
    {
        "id": "b9c380f9aa05b07a",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1986,
        "y": 612,
        "wires": []
    },
    {
        "id": "1c33c197edca5ed8",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2082,
        "y": 396,
        "wires": []
    },
    {
        "id": "daa23b90f77653e8",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 438,
        "y": 450,
        "wires": []
    },
    {
        "id": "215762e78937528b",
        "type": "inject",
        "z": "a4016556e17b5c1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "fa75a55c1facad92"
            ]
        ]
    },
    {
        "id": "fa75a55c1facad92",
        "type": "file in",
        "z": "a4016556e17b5c1d",
        "name": "Reading Project Settings",
        "filename": "/data/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "274e08b421da8a4c"
            ]
        ]
    },
    {
        "id": "274e08b421da8a4c",
        "type": "json",
        "z": "a4016556e17b5c1d",
        "name": "To Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 560,
        "y": 180,
        "wires": [
            [
                "30111c67affe5831"
            ]
        ]
    },
    {
        "id": "30111c67affe5831",
        "type": "change",
        "z": "a4016556e17b5c1d",
        "name": "Save Settings",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 180,
        "wires": [
            [
                "272943c8ddf8b294"
            ]
        ]
    },
    {
        "id": "272943c8ddf8b294",
        "type": "link out",
        "z": "a4016556e17b5c1d",
        "name": "Output Global Config",
        "mode": "link",
        "links": [
            "9eb59bdd79987113"
        ],
        "x": 875,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f9725ac22de3368",
        "type": "watch",
        "z": "a4016556e17b5c1d",
        "name": "Settings File Observer",
        "files": "/data/config.json",
        "recursive": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "fa75a55c1facad92"
            ]
        ]
    },
    {
        "id": "5ddd8e81bae42328",
        "type": "catch",
        "z": "a4016556e17b5c1d",
        "name": "Settings File doesnt exists",
        "scope": [
            "fa75a55c1facad92"
        ],
        "uncaught": false,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "3ecd2c74440758b6"
            ]
        ]
    },
    {
        "id": "3ecd2c74440758b6",
        "type": "function",
        "z": "a4016556e17b5c1d",
        "name": "Create Default Settings File",
        "func": "msg.payload = {\n    \"urlBase\": \"192.168.192.1:1880\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "7cd32969a127584f"
            ]
        ]
    },
    {
        "id": "7cd32969a127584f",
        "type": "file",
        "z": "a4016556e17b5c1d",
        "name": "Write Settings File",
        "filename": "/data/config.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "5f3ebd2c4b0ec8c7"
            ]
        ]
    },
    {
        "id": "5f3ebd2c4b0ec8c7",
        "type": "delay",
        "z": "a4016556e17b5c1d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "fa75a55c1facad92"
            ]
        ]
    },
    {
        "id": "26a516455a83df78",
        "type": "http in",
        "z": "a4016556e17b5c1d",
        "name": "HTTP Settings Return",
        "url": "/config",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "18af7c3b2762f0f3"
            ]
        ]
    },
    {
        "id": "ebc4dc30845099be",
        "type": "http in",
        "z": "a4016556e17b5c1d",
        "name": "HTTP Settings Update",
        "url": "/config",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "50618526bee2d8b3"
            ]
        ]
    },
    {
        "id": "18af7c3b2762f0f3",
        "type": "file in",
        "z": "a4016556e17b5c1d",
        "name": "Reading Project Settings",
        "filename": "/data/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "d11e1671314218cb"
            ]
        ]
    },
    {
        "id": "d11e1671314218cb",
        "type": "json",
        "z": "a4016556e17b5c1d",
        "name": "To Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "a962ba020c04787a"
            ]
        ]
    },
    {
        "id": "a962ba020c04787a",
        "type": "http response",
        "z": "a4016556e17b5c1d",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "50618526bee2d8b3",
        "type": "file",
        "z": "a4016556e17b5c1d",
        "name": "Write Settings File",
        "filename": "/data/config.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 350,
        "y": 460,
        "wires": [
            [
                "16bb1117458b5a80"
            ]
        ]
    },
    {
        "id": "16bb1117458b5a80",
        "type": "http response",
        "z": "a4016556e17b5c1d",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "daa3e35243c049b6",
        "type": "inject",
        "z": "a4016556e17b5c1d",
        "name": "checkBK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 900,
        "wires": [
            [
                "166e9f9a88dca544"
            ]
        ]
    },
    {
        "id": "166e9f9a88dca544",
        "type": "http request",
        "z": "a4016556e17b5c1d",
        "name": "Dummy",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.192.6:4000/api/dummy",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 240,
        "y": 900,
        "wires": [
            [
                "962a5430936997b3"
            ]
        ]
    },
    {
        "id": "962a5430936997b3",
        "type": "function",
        "z": "a4016556e17b5c1d",
        "name": "function 1",
        "func": "if(msg.statusCode != 200)\n    msg.statusCode = 503\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 900,
        "wires": [
            [
                "76513d761b556e71"
            ]
        ]
    },
    {
        "id": "76513d761b556e71",
        "type": "debug",
        "z": "a4016556e17b5c1d",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "statusCode",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 900,
        "wires": []
    },
    {
        "id": "dbc10af27f240d2b",
        "type": "catch",
        "z": "a4016556e17b5c1d",
        "name": "",
        "scope": [
            "166e9f9a88dca544"
        ],
        "uncaught": false,
        "x": 230,
        "y": 980,
        "wires": [
            [
                "450e90016ed3071b"
            ]
        ]
    },
    {
        "id": "450e90016ed3071b",
        "type": "debug",
        "z": "a4016556e17b5c1d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 980,
        "wires": []
    },
    {
        "id": "902aa83bf72143d2",
        "type": "Bme280",
        "z": "4e4be63df05180bc",
        "name": "",
        "bus": "1",
        "address": "0x76",
        "topic": "bme280",
        "extra": false,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "96729fb65278186d"
            ]
        ]
    },
    {
        "id": "46010bbb6abcd3f6",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "902aa83bf72143d2"
            ]
        ]
    },
    {
        "id": "96729fb65278186d",
        "type": "debug",
        "z": "4e4be63df05180bc",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "534b43f10932bf29",
        "type": "rpi-gpio out",
        "z": "4e4be63df05180bc",
        "name": "",
        "pin": "26",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 588,
        "y": 378,
        "wires": []
    },
    {
        "id": "0bb4c05476eddafa",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "26a155e0c5996546"
            ]
        ]
    },
    {
        "id": "8cfcc9f23cc5bbe1",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 350,
        "y": 460,
        "wires": [
            [
                "26a155e0c5996546"
            ]
        ]
    },
    {
        "id": "9910b860768673f9",
        "type": "mqtt in",
        "z": "4e4be63df05180bc",
        "name": "",
        "topic": "led",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4ce4539142712cae",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "830859186db3c93f",
        "type": "rpi-gpio out",
        "z": "4e4be63df05180bc",
        "name": "azul",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 650,
        "y": 680,
        "wires": []
    },
    {
        "id": "15a5ab519c5417dd",
        "type": "rpi-gpio out",
        "z": "4e4be63df05180bc",
        "name": "verde",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 650,
        "y": 740,
        "wires": []
    },
    {
        "id": "6060d5748f4cc30d",
        "type": "rpi-gpio out",
        "z": "4e4be63df05180bc",
        "name": "rojo",
        "pin": "13",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 650,
        "y": 800,
        "wires": []
    },
    {
        "id": "d0796350c4ff69fb",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 370,
        "y": 640,
        "wires": [
            [
                "830859186db3c93f"
            ]
        ]
    },
    {
        "id": "1a30e7ae4c50f857",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "830859186db3c93f"
            ]
        ]
    },
    {
        "id": "c580f1e16cd2b0b6",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 370,
        "y": 760,
        "wires": [
            [
                "15a5ab519c5417dd"
            ]
        ]
    },
    {
        "id": "dd1d204adb8e57d6",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 370,
        "y": 820,
        "wires": [
            [
                "15a5ab519c5417dd"
            ]
        ]
    },
    {
        "id": "76a1e1276f493a72",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 370,
        "y": 880,
        "wires": [
            [
                "6060d5748f4cc30d"
            ]
        ]
    },
    {
        "id": "6c7c319681136404",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 370,
        "y": 940,
        "wires": [
            [
                "6060d5748f4cc30d"
            ]
        ]
    },
    {
        "id": "4b7f5a1b32710998",
        "type": "rpi-srf",
        "z": "4e4be63df05180bc",
        "name": "",
        "topic": "SRF",
        "pulse": "0.5",
        "pins": "16,18",
        "precision": "0",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "d33f8ce794a42e3f"
            ]
        ]
    },
    {
        "id": "d33f8ce794a42e3f",
        "type": "debug",
        "z": "4e4be63df05180bc",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 340,
        "wires": []
    },
    {
        "id": "26a155e0c5996546",
        "type": "exec",
        "z": "4e4be63df05180bc",
        "command": "python /data/led.py",
        "addpay": "",
        "append": "1",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 612,
        "y": 450,
        "wires": [
            [
                "5b8691d97b5b132e"
            ],
            [
                "5b8691d97b5b132e"
            ],
            [
                "5b8691d97b5b132e"
            ]
        ]
    },
    {
        "id": "5b8691d97b5b132e",
        "type": "debug",
        "z": "4e4be63df05180bc",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 888,
        "y": 468,
        "wires": []
    },
    {
        "id": "806d1d4a105c9c16",
        "type": "mqtt in",
        "z": "0851b9d91a4d916f",
        "name": "",
        "topic": "Mediciones",
        "qos": "0",
        "datatype": "json",
        "broker": "8cc4005609a73937",
        "nl": false,
        "rap": true,
        "rh": "2",
        "inputs": 0,
        "x": 130,
        "y": 280,
        "wires": [
            [
                "0edb10e300ac66a9",
                "86ed8c7c50ee772b"
            ]
        ]
    },
    {
        "id": "f616e01e8b527f0e",
        "type": "inject",
        "z": "0851b9d91a4d916f",
        "name": "C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "mediciones",
        "payload": "{\"temperatura\":60,\"distancia\":20}",
        "payloadType": "json",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "67bc755e916b558b"
            ]
        ]
    },
    {
        "id": "67bc755e916b558b",
        "type": "mqtt out",
        "z": "0851b9d91a4d916f",
        "name": "",
        "topic": "mediciones",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cc4005609a73937",
        "x": 350,
        "y": 220,
        "wires": []
    },
    {
        "id": "bdebeca770199b04",
        "type": "inject",
        "z": "0851b9d91a4d916f",
        "name": "C",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "mediciones",
        "payload": "{\"radio\":5,\"forma\":\"Cilindro\",\"altura\":40}",
        "payloadType": "json",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "fab2a33890d75ddb"
            ]
        ]
    },
    {
        "id": "0edb10e300ac66a9",
        "type": "function",
        "z": "0851b9d91a4d916f",
        "name": "function 2",
        "func": "const contenedor = global.get(\"contenedor\");\nconst sensor = msg.payload\nconst medicion = {}\n\nconst getVolume = () => {\n    const beta = 0.00021\n    medicion.nivel = contenedor.altura - sensor.distancia\n    return 2\n\n}\n\nmedicion.temperatura = sensor.temperatura\nmedicion.volumen = getVolume()\n\n\nmsg.payload = medicion\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "ea791db7f6d20321"
            ]
        ]
    },
    {
        "id": "ea791db7f6d20321",
        "type": "debug",
        "z": "0851b9d91a4d916f",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 280,
        "wires": []
    },
    {
        "id": "fab2a33890d75ddb",
        "type": "function",
        "z": "0851b9d91a4d916f",
        "name": "function 3",
        "func": "\nglobal.set(\"contenedor\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "ad09c19ce077aca5",
        "type": "inject",
        "z": "0851b9d91a4d916f",
        "name": "C",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 520,
        "wires": [
            [
                "18fd77e4f6b540c1"
            ]
        ]
    },
    {
        "id": "18fd77e4f6b540c1",
        "type": "function",
        "z": "0851b9d91a4d916f",
        "name": "function 4",
        "func": "\nmsg.payload = \"HIIIII\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4553d2374d1adecc",
        "type": "catch",
        "z": "0851b9d91a4d916f",
        "name": "",
        "scope": [
            "d45074017e99dcf0"
        ],
        "uncaught": false,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "c529f1ab65abfe11"
            ]
        ]
    },
    {
        "id": "c529f1ab65abfe11",
        "type": "debug",
        "z": "0851b9d91a4d916f",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 580,
        "wires": []
    },
    {
        "id": "86ed8c7c50ee772b",
        "type": "debug",
        "z": "0851b9d91a4d916f",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 312,
        "y": 342,
        "wires": []
    },
    {
        "id": "14348341899996f6",
        "type": "catch",
        "z": "0851b9d91a4d916f",
        "name": "",
        "scope": [
            "806d1d4a105c9c16"
        ],
        "uncaught": false,
        "x": 860,
        "y": 252,
        "wires": [
            [
                "2fa063ed90b2ccf4"
            ]
        ]
    },
    {
        "id": "2fa063ed90b2ccf4",
        "type": "debug",
        "z": "0851b9d91a4d916f",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1074,
        "y": 234,
        "wires": []
    },
    {
        "id": "e73b178e5c91950e",
        "type": "http in",
        "z": "dba4f1ac499b6a24",
        "name": "RegisterContainer",
        "url": "/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "ad93e05ee69545f3",
                "118df02b7f1a29bc",
                "dd33a0823cd15f1b"
            ]
        ]
    },
    {
        "id": "ad93e05ee69545f3",
        "type": "http response",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 430,
        "y": 220,
        "wires": []
    },
    {
        "id": "5dabfcb220e20b91",
        "type": "comment",
        "z": "dba4f1ac499b6a24",
        "name": "Register Container Endpoint",
        "info": "",
        "x": 160,
        "y": 120,
        "wires": []
    },
    {
        "id": "118df02b7f1a29bc",
        "type": "json",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7b6123baa1f0aeb8",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "29ad5d7be5a2806b",
        "type": "catch",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "scope": [
            "12e00a6e53826897"
        ],
        "uncaught": false,
        "x": 710,
        "y": 160,
        "wires": [
            [
                "7b6123baa1f0aeb8"
            ]
        ]
    },
    {
        "id": "12e00a6e53826897",
        "type": "mongodb-node",
        "z": "dba4f1ac499b6a24",
        "mongodb": "bc46a78fce45a903",
        "name": "",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "d6d0b3a9e5efcc46"
            ]
        ]
    },
    {
        "id": "dd33a0823cd15f1b",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "d6d0b3a9e5efcc46",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 100,
        "wires": []
    },
    {
        "id": "f340a2bac7c633f6",
        "type": "inject",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "12e00a6e53826897"
            ]
        ]
    },
    {
        "id": "c6db2d856333cb76",
        "type": "change",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "global",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "40244ed54d350f7f",
        "type": "inject",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 380,
        "wires": [
            [
                "c6db2d856333cb76"
            ]
        ]
    },
    {
        "id": "0441e1259278e5dd",
        "type": "mongodb-node",
        "z": "dba4f1ac499b6a24",
        "mongodb": "ce26f499c263739a",
        "name": "instancia iua",
        "collection": "container",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 574,
        "y": 504,
        "wires": [
            [
                "946941758c09cb28"
            ]
        ]
    },
    {
        "id": "e3b8266bec718277",
        "type": "inject",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 228,
        "y": 504,
        "wires": [
            [
                "1513cd97e671ca9b"
            ]
        ]
    },
    {
        "id": "946941758c09cb28",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 504,
        "wires": []
    },
    {
        "id": "1513cd97e671ca9b",
        "type": "function",
        "z": "dba4f1ac499b6a24",
        "name": "insert",
        "func": "msg.payload = [{ _id: \"1234\", name: 'Anna', age: 1 }];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 504,
        "wires": [
            [
                "0441e1259278e5dd"
            ]
        ]
    },
    {
        "id": "b9978bdfd44f3fe7",
        "type": "mongodb-node",
        "z": "dba4f1ac499b6a24",
        "mongodb": "ce26f499c263739a",
        "name": "instancia iua",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 578,
        "y": 630,
        "wires": [
            [
                "d039468d7945fc43"
            ]
        ]
    },
    {
        "id": "eeddf8062c81bb4d",
        "type": "inject",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 228,
        "y": 630,
        "wires": [
            [
                "584766b0946f3a37"
            ]
        ]
    },
    {
        "id": "d039468d7945fc43",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 630,
        "wires": []
    },
    {
        "id": "3c67664d04e01c93",
        "type": "function",
        "z": "dba4f1ac499b6a24",
        "name": "find by id",
        "func": "var msgdata = {};\nmsgdata.collection = \"soa\";\nmsgdata.payload = { \"_id\":\"6484b1d204e0120007621e32\"};\nreturn msgdata;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 392,
        "y": 630,
        "wires": [
            [
                "b9978bdfd44f3fe7",
                "63cec15997ae2be9"
            ]
        ]
    },
    {
        "id": "b41a676b46bd2abe",
        "type": "mongodb-node",
        "z": "dba4f1ac499b6a24",
        "mongodb": "ce26f499c263739a",
        "name": "instancia iua",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 574,
        "y": 558,
        "wires": [
            [
                "b66c37bf149b7f36"
            ]
        ]
    },
    {
        "id": "3b0e86e1b7a8c4a9",
        "type": "inject",
        "z": "dba4f1ac499b6a24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 228,
        "y": 558,
        "wires": [
            [
                "b41a676b46bd2abe"
            ]
        ]
    },
    {
        "id": "b66c37bf149b7f36",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 558,
        "wires": []
    },
    {
        "id": "63cec15997ae2be9",
        "type": "debug",
        "z": "dba4f1ac499b6a24",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 582,
        "y": 702,
        "wires": []
    },
    {
        "id": "584766b0946f3a37",
        "type": "function",
        "z": "dba4f1ac499b6a24",
        "name": "function 5",
        "func": "//msg.payload = { \"name\": \"Anna\" }\n//msg.payload = { \"_id\": \"6484b1d204e0120007621e32\" }\nmsg.payload = { \"_id\": \"1234\" }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 384,
        "y": 702,
        "wires": [
            [
                "b9978bdfd44f3fe7"
            ]
        ]
    },
    {
        "id": "7e416c8155f2dabb",
        "type": "exec",
        "z": "fd2c40c2d50b7447",
        "command": "python /data/distance.py",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "distance sensor py",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "bd1d70d696d18ac0"
            ],
            [],
            []
        ]
    },
    {
        "id": "421e2b6aca3e02e8",
        "type": "http in",
        "z": "fd2c40c2d50b7447",
        "name": "activar sensor",
        "url": "/activar-sensor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f32ba01a13f6a6c0",
        "type": "inject",
        "z": "fd2c40c2d50b7447",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 220,
        "wires": [
            [
                "7e416c8155f2dabb"
            ]
        ]
    },
    {
        "id": "15a9f85817701f12",
        "type": "catch",
        "z": "fd2c40c2d50b7447",
        "name": "",
        "scope": [
            "7e416c8155f2dabb",
            "270c18faf7fc7927"
        ],
        "uncaught": false,
        "x": 690,
        "y": 500,
        "wires": [
            [
                "862213e66c3a752e"
            ]
        ]
    },
    {
        "id": "862213e66c3a752e",
        "type": "debug",
        "z": "fd2c40c2d50b7447",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 890,
        "y": 480,
        "wires": []
    },
    {
        "id": "6199ae525b55f83f",
        "type": "debug",
        "z": "fd2c40c2d50b7447",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 300,
        "wires": []
    },
    {
        "id": "270c18faf7fc7927",
        "type": "exec",
        "z": "fd2c40c2d50b7447",
        "command": "/data/distance",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "distance sensor C",
        "x": 570,
        "y": 640,
        "wires": [
            [
                "67e2dc846cff258d"
            ],
            [
                "67e2dc846cff258d"
            ],
            [
                "67e2dc846cff258d"
            ]
        ]
    },
    {
        "id": "79e7d215d2d9e938",
        "type": "inject",
        "z": "fd2c40c2d50b7447",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "270c18faf7fc7927"
            ]
        ]
    },
    {
        "id": "67e2dc846cff258d",
        "type": "debug",
        "z": "fd2c40c2d50b7447",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 640,
        "wires": []
    },
    {
        "id": "bd1d70d696d18ac0",
        "type": "json",
        "z": "fd2c40c2d50b7447",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 896,
        "y": 234,
        "wires": [
            [
                "6199ae525b55f83f"
            ]
        ]
    },
    {
        "id": "f3cd3ea1d7b8f3b8",
        "type": "inject",
        "z": "101dde30bb281675",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "fecha1",
        "payload": "",
        "payloadType": "date",
        "x": 152,
        "y": 306,
        "wires": [
            [
                "4c792c86dac5a385"
            ]
        ]
    },
    {
        "id": "8bd61528e44e9cb0",
        "type": "inject",
        "z": "101dde30bb281675",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "fecha2",
        "payload": "{\"id\":55}",
        "payloadType": "json",
        "x": 602,
        "y": 648,
        "wires": [
            [
                "0851fac1b478e3d9",
                "b658aa5f6965306c"
            ]
        ]
    },
    {
        "id": "78f0df0bc7587322",
        "type": "debug",
        "z": "101dde30bb281675",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 378,
        "wires": []
    },
    {
        "id": "4c792c86dac5a385",
        "type": "join-wait",
        "z": "101dde30bb281675",
        "name": "",
        "paths": "[\"fecha1\", \"fecha2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "topic",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": 15000,
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "false",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 552,
        "y": 396,
        "wires": [
            [
                "78f0df0bc7587322"
            ],
            []
        ]
    },
    {
        "id": "5918e4d891c6ec24",
        "type": "inject",
        "z": "101dde30bb281675",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "fecha1",
        "payload": "{\"id\":45}",
        "payloadType": "json",
        "x": 584,
        "y": 558,
        "wires": [
            [
                "b658aa5f6965306c"
            ]
        ]
    },
    {
        "id": "3fe66d3e9b96c50c",
        "type": "inject",
        "z": "101dde30bb281675",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "fecha2",
        "payload": "",
        "payloadType": "date",
        "x": 162,
        "y": 450,
        "wires": [
            [
                "4c792c86dac5a385"
            ]
        ]
    },
    {
        "id": "062bba6b9d28c62b",
        "type": "debug",
        "z": "101dde30bb281675",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1302,
        "y": 648,
        "wires": []
    },
    {
        "id": "0851fac1b478e3d9",
        "type": "join-wait",
        "z": "101dde30bb281675",
        "name": "",
        "paths": "[\"fecha1\", \"fecha2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "topic",
        "pathTopicType": "msg",
        "correlationTopic": "payload",
        "correlationTopicType": "msg",
        "timeout": 15000,
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "false",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1074,
        "y": 648,
        "wires": [
            [
                "062bba6b9d28c62b"
            ],
            []
        ]
    },
    {
        "id": "b658aa5f6965306c",
        "type": "join",
        "z": "101dde30bb281675",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 788,
        "y": 558,
        "wires": [
            [
                "856b6871eb4b159c"
            ]
        ]
    },
    {
        "id": "856b6871eb4b159c",
        "type": "function",
        "z": "101dde30bb281675",
        "name": "function 6",
        "func": "msg.topic = \"fecha1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 912,
        "y": 558,
        "wires": [
            [
                "0851fac1b478e3d9"
            ]
        ]
    },
    {
        "id": "fcd2dd966646f325",
        "type": "link in",
        "z": "b975189eeafb751a",
        "name": "link in 1",
        "links": [
            "01d9d2d50b595f38"
        ],
        "x": 129,
        "y": 414,
        "wires": [
            [
                "45eceda707b8bf30",
                "0b8e0b9250f96660",
                "7c1f59fa4980e498",
                "54afa9a6f678ad33",
                "f797ca31db815d2e"
            ]
        ]
    },
    {
        "id": "60640ed9c276b0c2",
        "type": "ui_gauge",
        "z": "b975189eeafb751a",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 3,
        "width": "10",
        "height": "10",
        "gtype": "wave",
        "title": "Nivel",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 626,
        "y": 306,
        "wires": []
    },
    {
        "id": "45eceda707b8bf30",
        "type": "debug",
        "z": "b975189eeafb751a",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 282,
        "y": 612,
        "wires": []
    },
    {
        "id": "0b8e0b9250f96660",
        "type": "function",
        "z": "b975189eeafb751a",
        "name": "Nivel",
        "func": "let contenedor = global.get(\"container\");\nlet value = (msg.payload.nivel / contenedor.altura) * 100;\n\nmsg = {\n    ui_control: {\n        \"gtype\": \"wave\",\n        \"min\": 0,\n        \"max\": 100\n\n    },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 392,
        "y": 306,
        "wires": [
            [
                "60640ed9c276b0c2"
            ]
        ]
    },
    {
        "id": "db9656a69f41d1ed",
        "type": "ui_chart",
        "z": "b975189eeafb751a",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 1,
        "width": "10",
        "height": "12",
        "label": "Temperatura",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 646,
        "y": 378,
        "wires": [
            []
        ]
    },
    {
        "id": "7c1f59fa4980e498",
        "type": "function",
        "z": "b975189eeafb751a",
        "name": "Temperatura",
        "func": "let value = msg.payload.temperatura;\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 412,
        "y": 378,
        "wires": [
            [
                "db9656a69f41d1ed"
            ]
        ]
    },
    {
        "id": "8b8ada14934763a1",
        "type": "ui_chart",
        "z": "b975189eeafb751a",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 1,
        "width": "10",
        "height": "12",
        "label": "Caudal",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 636,
        "y": 450,
        "wires": [
            []
        ]
    },
    {
        "id": "54afa9a6f678ad33",
        "type": "function",
        "z": "b975189eeafb751a",
        "name": "Caudal",
        "func": "let value = msg.payload.caudal;\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 402,
        "y": 450,
        "wires": [
            [
                "8b8ada14934763a1"
            ]
        ]
    },
    {
        "id": "029275760a442050",
        "type": "ui_text",
        "z": "b975189eeafb751a",
        "group": "17d19835de663e2f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ETA",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 626,
        "y": 522,
        "wires": []
    },
    {
        "id": "f797ca31db815d2e",
        "type": "function",
        "z": "b975189eeafb751a",
        "name": "ETA",
        "func": "let value = msg.payload.eta;\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 396,
        "y": 522,
        "wires": [
            [
                "029275760a442050"
            ]
        ]
    }
]