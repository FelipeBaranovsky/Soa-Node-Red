[
    {
        "id": "0d22c13b3f5bba8c",
        "type": "tab",
        "label": "Registrarme",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9d5fa916f3eb419e",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "24dfb8ef33f23156",
        "type": "tab",
        "label": "New Container",
        "disabled": false,
        "info": "Backend Auth",
        "env": []
    },
    {
        "id": "6f2117e9081c52cf",
        "type": "tab",
        "label": "Change Actual Container",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bbf8bb52d5a439a2",
        "type": "tab",
        "label": "Process",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a4016556e17b5c1d",
        "type": "tab",
        "label": "Config",
        "disabled": false,
        "info": "Backend config ",
        "env": []
    },
    {
        "id": "4e4be63df05180bc",
        "type": "tab",
        "label": "Leds & Cervo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b975189eeafb751a",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "40bfc63e90828d9f",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da14db7cec96a3f9",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 54,
                "y": 72,
                "wires": [
                    {
                        "id": "a295ba95754835c4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 504,
                "y": 72,
                "wires": [
                    {
                        "id": "4686d3612cadfd1d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "19062d805472fa14",
        "type": "subflow",
        "name": "Subflow 2",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "e5b2f8bf37588cc1",
        "type": "subflow",
        "name": "Subflow 3",
        "info": "",
        "in": [
            {
                "x": 34,
                "y": 90,
                "wires": [
                    {
                        "id": "639ae65cad840145"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 992,
                "y": 72,
                "wires": [
                    {
                        "id": "3a20ea9a531dd1c8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "f96b8df6fe7c2f8d",
        "type": "group",
        "z": "24dfb8ef33f23156",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e6c11394069457fd",
            "36ab463705db8acb",
            "53a920cdc2ec4cec",
            "cf907aebfaff3150",
            "082ff81b8e5c11a5",
            "6f250ffd17df7622",
            "78e0dcd76643e9e8",
            "e40cee6eda6e8e32",
            "7bb3d14fb2f12849",
            "b40b81c5ddb5b9d7",
            "5b903833fadada49",
            "3f138c214fb07141"
        ],
        "x": 190,
        "y": 99,
        "w": 1474,
        "h": 176
    },
    {
        "id": "804bbb462be1f7ec",
        "type": "group",
        "z": "6f2117e9081c52cf",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0d27d53123a1bbed",
            "3032be3270e5c760",
            "625feb44002a34a5",
            "43504d1d4acde086",
            "6d1171f8a6947e64",
            "d7aab90e7576d914"
        ],
        "x": 16,
        "y": 355,
        "w": 636,
        "h": 154
    },
    {
        "id": "8df2068a65345626",
        "type": "group",
        "z": "6f2117e9081c52cf",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8d548b6e221babc1",
            "6bd21c5006458b5c",
            "ba4fda0947ea90bf",
            "09647057c5dbe213",
            "7293939f3e187b8f",
            "868ac3f382160896",
            "2922916575d2fbac",
            "c4f65e8b745f188a",
            "58335f524a98764c",
            "8d436f8455148d8c",
            "3fc9484950c5daec"
        ],
        "x": 12,
        "y": 31,
        "w": 1328,
        "h": 208
    },
    {
        "id": "75e02b13f632c271",
        "type": "group",
        "z": "bbf8bb52d5a439a2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "67d397237c754ae9",
            "97d5a4872625b3ec",
            "4f54c4f907ce8495",
            "9a05ebef32842a9f",
            "ebca2435e78c8506",
            "c749fa063525f581",
            "a6c25776d746e1b6",
            "8ea5553d0d298f58",
            "c9ebf2ea9b954364",
            "0788541e16ec93e4",
            "510d9a226ec56fbf",
            "b9a9871933956357"
        ],
        "x": 544,
        "y": 229,
        "w": 1264,
        "h": 154
    },
    {
        "id": "b65ae5fa73661556",
        "type": "group",
        "z": "bbf8bb52d5a439a2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "398fd7c154a5c79a",
            "117224e504b86535",
            "01d9d2d50b595f38",
            "c010df3fd2223678",
            "e935e1206b5696f8",
            "be6dc0ec1b17542c",
            "cffca188f996e5f6",
            "2614e54fb8a332d7",
            "3f379c851dad510c",
            "341d6a0613209ac4",
            "1e273ddbc8b43d3a",
            "a55530c27f666fab",
            "6b10a921aa8102b4",
            "7d1d4428a0b72f51",
            "2a2629d7e170136f",
            "2d3bebef2ddfe095",
            "96888705c3e7a435",
            "80991980289b0df5",
            "6bb2c50c171f11c5",
            "556a47b6bb410fe5",
            "66643a7e4299b06b"
        ],
        "x": 536,
        "y": 445,
        "w": 2506,
        "h": 190
    },
    {
        "id": "45a0e8bbf62bd058",
        "type": "group",
        "z": "4e4be63df05180bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0bb4c05476eddafa",
            "8cfcc9f23cc5bbe1",
            "9910b860768673f9",
            "f44c60079148d0f6",
            "4bdeaa14fb69ac69",
            "dabb8d731704b0a5",
            "98a534a7b7207554",
            "f7ae7e7adda4ca49",
            "263c05dfb670e725",
            "20cd2e0a6cd772da"
        ],
        "x": 124,
        "y": 359
    },
    {
        "id": "2227761e92b67b79",
        "type": "group",
        "z": "4e4be63df05180bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bcaf772ec26ff4aa",
            "a8df507b71d607a7",
            "0b0aced60a645c2a",
            "8b280ba5b1c45db5",
            "f68db911cabcbb2d",
            "fb3e3c576a739acb",
            "24950096ec3ba585",
            "c22f2675d5959bd2",
            "7af592aebddb513d",
            "ccba867a1161b2b6"
        ],
        "x": 124,
        "y": 661
    },
    {
        "id": "cce602401fabbb1d",
        "type": "group",
        "z": "4e4be63df05180bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7ff20f40071be735",
            "7de7a5799c495cf1",
            "8a45027ce6924475",
            "1852771f1fc1a767",
            "7a5da6b85535d996",
            "0c72d76a8ea145a2",
            "981f34528450af53",
            "0b3025c242d35a14"
        ],
        "x": 124,
        "y": 931
    },
    {
        "id": "34e41f087574ad65",
        "type": "group",
        "z": "b975189eeafb751a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "fcd2dd966646f325",
            "60640ed9c276b0c2",
            "45eceda707b8bf30",
            "0b8e0b9250f96660",
            "db9656a69f41d1ed",
            "7c1f59fa4980e498",
            "8b8ada14934763a1",
            "54afa9a6f678ad33",
            "029275760a442050",
            "f797ca31db815d2e",
            "601e4cf9c4aaa9ae",
            "e889061a5442645f",
            "c66e4d397b226ab1",
            "35cdb466c3c159dc",
            "16c05f905226675b",
            "87d48a4a6366a893",
            "1c9f8dbd6a88c731",
            "06caff33513052c5"
        ],
        "x": 88,
        "y": 229,
        "w": 654,
        "h": 712
    },
    {
        "id": "0d06d5e10f8731cc",
        "type": "group",
        "z": "9d5fa916f3eb419e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9c28024ffaa87a70",
            "6d570cf363e3c0cf",
            "8da6156e35ab59ec"
        ],
        "x": 36,
        "y": 283,
        "w": 444,
        "h": 118
    },
    {
        "id": "659cfae84f3b8755",
        "type": "group",
        "z": "9d5fa916f3eb419e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b02a976196aa9c74",
            "d461ce926c1172ce",
            "630a8f0e4edfe9bc",
            "3705488c918abd60"
        ],
        "x": 38,
        "y": 445,
        "w": 548,
        "h": 118
    },
    {
        "id": "4ce4539142712cae",
        "type": "mqtt-broker",
        "name": "server-mqtt",
        "broker": "192.168.192.1",
        "port": "8883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "medicion",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8cc4005609a73937",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.192.1",
        "port": "1883",
        "clientid": "rasp-client",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5dab060f7ebe2415",
        "type": "mongodb-aleph-config",
        "hostname": "cluster0.yfyzb1k.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "",
        "port": "27017",
        "db": "soa",
        "name": ""
    },
    {
        "id": "e2bc7ac9aa77279e",
        "type": "mongodb4-client",
        "name": "simple connection",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "",
        "dbName": "nodered",
        "authSource": "nodered",
        "authMechanism": "SCRAM-SHA-256",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "",
        "advanced": "{\"connectTimeoutMS\": 30000}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "dd0b7f14421d961d",
        "type": "mongodb4-client",
        "name": "advanced connection",
        "protocol": "mongodb",
        "hostname": "",
        "port": "",
        "dbName": "nodered",
        "authSource": "nodered",
        "authMechanism": "SCRAM-SHA-256",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "mongodb://localhost:27017",
        "advanced": "",
        "uriTabActive": "tab-uri-advanced"
    },
    {
        "id": "d1cb3b0cb03de87e",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "cluster0.yfyzb1k.mongodb.net",
        "port": "",
        "dbName": "soa",
        "appName": "",
        "authSource": "",
        "authMechanism": "SCRAM-SHA-256",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "mongodb+srv://root:root@cluster0.yfyzb1k.mongodb.net",
        "advanced": "{}",
        "uriTabActive": "tab-uri-advanced"
    },
    {
        "id": "bc46a78fce45a903",
        "type": "mongodb-config",
        "hostname": "192.168.192.210",
        "port": "27017",
        "db": "soa?authSource=admin",
        "name": ""
    },
    {
        "id": "ce26f499c263739a",
        "type": "mongodb-config",
        "hostname": "192.168.192.189",
        "port": "27017",
        "db": "soa?authSource=admin",
        "name": ""
    },
    {
        "id": "c4d89469b20c0f9e",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "17d19835de663e2f",
        "type": "ui_group",
        "name": "Graficos",
        "tab": "358456880232ef9c",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "358456880232ef9c",
        "type": "ui_tab",
        "name": "HISTORIAL",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "57a3c8c6be82297f",
        "type": "ui_group",
        "name": "EN VIVO",
        "tab": "db73469ce5a826b3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "db73469ce5a826b3",
        "type": "ui_tab",
        "name": "EN VIVO",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a295ba95754835c4",
        "type": "function",
        "z": "da14db7cec96a3f9",
        "name": "function 21",
        "func": "const user = global.get('user')\nmsg.payload.user.bearer = `Bearer ${user.token}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 196,
        "y": 72,
        "wires": [
            [
                "4686d3612cadfd1d",
                "91d22de256e82e63"
            ]
        ]
    },
    {
        "id": "4686d3612cadfd1d",
        "type": "http request",
        "z": "da14db7cec96a3f9",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tridentisimo.mooo.com/api/dummy",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "msg",
                "valueValue": "payload.user.bearer"
            }
        ],
        "x": 362,
        "y": 72,
        "wires": [
            []
        ]
    },
    {
        "id": "91d22de256e82e63",
        "type": "debug",
        "z": "da14db7cec96a3f9",
        "name": "debug 68",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 348,
        "y": 144,
        "wires": []
    },
    {
        "id": "6ae3d6e75e0ff4da",
        "type": "function",
        "z": "e5b2f8bf37588cc1",
        "name": "Bearer",
        "func": "const user = global.get('user')\nmsg.payload = {\n    \"bearer\": `Bearer ${user.token}`\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 338,
        "y": 90,
        "wires": [
            [
                "5e252ba7bcc29632"
            ]
        ]
    },
    {
        "id": "5e252ba7bcc29632",
        "type": "http request",
        "z": "e5b2f8bf37588cc1",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tridentisimo.mooo.com/api/dummy",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "msg",
                "valueValue": "payload.bearer"
            }
        ],
        "x": 524,
        "y": 90,
        "wires": [
            [
                "22ba0ddd5be8f126"
            ]
        ]
    },
    {
        "id": "639ae65cad840145",
        "type": "change",
        "z": "e5b2f8bf37588cc1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 90,
        "wires": [
            [
                "6ae3d6e75e0ff4da"
            ]
        ]
    },
    {
        "id": "22ba0ddd5be8f126",
        "type": "switch",
        "z": "e5b2f8bf37588cc1",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 90,
        "wires": [
            [
                "3a20ea9a531dd1c8"
            ],
            [
                "96e97eac3e312dc2"
            ]
        ]
    },
    {
        "id": "3a20ea9a531dd1c8",
        "type": "function",
        "z": "e5b2f8bf37588cc1",
        "name": "Reset",
        "func": "const anterior = flow.get('payload')\nmsg.payload = anterior\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 832,
        "y": 72,
        "wires": [
            []
        ]
    },
    {
        "id": "57121e79dc4b4ff7",
        "type": "http response",
        "z": "e5b2f8bf37588cc1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 940,
        "y": 126,
        "wires": []
    },
    {
        "id": "96e97eac3e312dc2",
        "type": "function",
        "z": "e5b2f8bf37588cc1",
        "name": "Reset",
        "func": "msg.payload = \"No estas autorizado perri\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 824,
        "y": 126,
        "wires": [
            [
                "57121e79dc4b4ff7"
            ]
        ]
    },
    {
        "id": "2a36b45798d63afd",
        "type": "http in",
        "z": "0d22c13b3f5bba8c",
        "name": "Registrarme",
        "url": "/register-user",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 142,
        "y": 198,
        "wires": [
            [
                "0b2f847eb6c717d8"
            ]
        ]
    },
    {
        "id": "2683526f1ed02c1c",
        "type": "http response",
        "z": "0d22c13b3f5bba8c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 580,
        "y": 198,
        "wires": []
    },
    {
        "id": "105a6625b2167e2b",
        "type": "http request",
        "z": "0d22c13b3f5bba8c",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://tridentisimo.mooo.com/api/auth/register",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 434,
        "y": 198,
        "wires": [
            [
                "2683526f1ed02c1c"
            ]
        ]
    },
    {
        "id": "0b2f847eb6c717d8",
        "type": "json",
        "z": "0d22c13b3f5bba8c",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 292,
        "y": 198,
        "wires": [
            [
                "105a6625b2167e2b"
            ]
        ]
    },
    {
        "id": "0bc4f699cbe752fb",
        "type": "http in",
        "z": "9d5fa916f3eb419e",
        "name": "Login",
        "url": "/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 122,
        "y": 162,
        "wires": [
            [
                "2f36262ebc5771d8",
                "4afcfdffa68e2827"
            ]
        ]
    },
    {
        "id": "2f36262ebc5771d8",
        "type": "json",
        "z": "9d5fa916f3eb419e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 284,
        "y": 162,
        "wires": [
            [
                "c2fc4d394056f1a6"
            ]
        ]
    },
    {
        "id": "34e66c876b8ff118",
        "type": "http request",
        "z": "9d5fa916f3eb419e",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 560,
        "y": 162,
        "wires": [
            [
                "6b1ed1e0fc201086"
            ]
        ]
    },
    {
        "id": "8e155d9be2702a6d",
        "type": "change",
        "z": "9d5fa916f3eb419e",
        "name": "Actual User",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1388,
        "y": 180,
        "wires": [
            [
                "a0e9bbb2f5349107"
            ]
        ]
    },
    {
        "id": "4afcfdffa68e2827",
        "type": "json",
        "z": "9d5fa916f3eb419e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 284,
        "y": 216,
        "wires": [
            [
                "664a23cca5e7f0e3"
            ]
        ]
    },
    {
        "id": "ad894a832387f0f8",
        "type": "join",
        "z": "9d5fa916f3eb419e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 878,
        "y": 216,
        "wires": [
            [
                "be5d1bc80347268f"
            ]
        ]
    },
    {
        "id": "664a23cca5e7f0e3",
        "type": "function",
        "z": "9d5fa916f3eb419e",
        "name": "function 18",
        "func": "msg.topic = \"inicial\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 434,
        "y": 216,
        "wires": [
            [
                "ad894a832387f0f8"
            ]
        ]
    },
    {
        "id": "6b1ed1e0fc201086",
        "type": "function",
        "z": "9d5fa916f3eb419e",
        "name": "function 19",
        "func": "msg.topic = \"status\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 722,
        "y": 162,
        "wires": [
            [
                "ad894a832387f0f8"
            ]
        ]
    },
    {
        "id": "83f307c4e53baf1e",
        "type": "switch",
        "z": "9d5fa916f3eb419e",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1174,
        "y": 216,
        "wires": [
            [
                "8e155d9be2702a6d"
            ],
            [
                "a0e9bbb2f5349107"
            ]
        ]
    },
    {
        "id": "a0e9bbb2f5349107",
        "type": "http response",
        "z": "9d5fa916f3eb419e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1562,
        "y": 216,
        "wires": []
    },
    {
        "id": "c2fc4d394056f1a6",
        "type": "function",
        "z": "9d5fa916f3eb419e",
        "name": "URL",
        "func": "const username = msg.payload.username\nconst password = msg.payload.password\nmsg.url = `https://tridentisimo.mooo.com/api/auth/login?username=${username}&password=${password}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 414,
        "y": 162,
        "wires": [
            [
                "34e66c876b8ff118"
            ]
        ]
    },
    {
        "id": "9c28024ffaa87a70",
        "type": "inject",
        "z": "9d5fa916f3eb419e",
        "g": "0d06d5e10f8731cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "user",
        "payloadType": "global",
        "x": 152,
        "y": 360,
        "wires": [
            [
                "6d570cf363e3c0cf"
            ]
        ]
    },
    {
        "id": "6d570cf363e3c0cf",
        "type": "debug",
        "z": "9d5fa916f3eb419e",
        "g": "0d06d5e10f8731cc",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 374,
        "y": 360,
        "wires": []
    },
    {
        "id": "8da6156e35ab59ec",
        "type": "comment",
        "z": "9d5fa916f3eb419e",
        "g": "0d06d5e10f8731cc",
        "name": "Test",
        "info": "",
        "x": 112,
        "y": 324,
        "wires": []
    },
    {
        "id": "be5d1bc80347268f",
        "type": "function",
        "z": "9d5fa916f3eb419e",
        "name": "function 20",
        "func": "msg.payload = msg.payload.status\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1024,
        "y": 216,
        "wires": [
            [
                "83f307c4e53baf1e"
            ]
        ]
    },
    {
        "id": "b02a976196aa9c74",
        "type": "debug",
        "z": "9d5fa916f3eb419e",
        "g": "659cfae84f3b8755",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 522,
        "wires": []
    },
    {
        "id": "d461ce926c1172ce",
        "type": "inject",
        "z": "9d5fa916f3eb419e",
        "g": "659cfae84f3b8755",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 144,
        "y": 522,
        "wires": [
            [
                "630a8f0e4edfe9bc"
            ]
        ]
    },
    {
        "id": "630a8f0e4edfe9bc",
        "type": "subflow:e5b2f8bf37588cc1",
        "z": "9d5fa916f3eb419e",
        "g": "659cfae84f3b8755",
        "name": "Autenticar Simple",
        "x": 312,
        "y": 522,
        "wires": [
            [
                "b02a976196aa9c74"
            ]
        ]
    },
    {
        "id": "3705488c918abd60",
        "type": "comment",
        "z": "9d5fa916f3eb419e",
        "g": "659cfae84f3b8755",
        "name": "Test",
        "info": "",
        "x": 128,
        "y": 486,
        "wires": []
    },
    {
        "id": "e6c11394069457fd",
        "type": "http in",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "RegisterContainer",
        "url": "/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 306,
        "y": 180,
        "wires": [
            [
                "3f138c214fb07141"
            ]
        ]
    },
    {
        "id": "36ab463705db8acb",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Registrar Recipiente",
        "info": "",
        "x": 306,
        "y": 140,
        "wires": []
    },
    {
        "id": "c42a10ba1889a578",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 588,
        "y": 828,
        "wires": []
    },
    {
        "id": "db604851792d6ccd",
        "type": "catch",
        "z": "24dfb8ef33f23156",
        "name": "",
        "scope": [
            "8704dffa14797e95"
        ],
        "uncaught": false,
        "x": 598,
        "y": 774,
        "wires": [
            [
                "c42a10ba1889a578"
            ]
        ]
    },
    {
        "id": "53a920cdc2ec4cec",
        "type": "switch",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "",
        "property": "payload.result.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 216,
        "wires": [
            [
                "5b903833fadada49"
            ],
            [
                "e40cee6eda6e8e32"
            ]
        ]
    },
    {
        "id": "cf907aebfaff3150",
        "type": "http response",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1588,
        "y": 198,
        "wires": []
    },
    {
        "id": "de32ce20cf4b3799",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"radio\":50,\"tipo\":\"cilindro\"}",
        "payloadType": "json",
        "x": 122,
        "y": 738,
        "wires": [
            [
                "3fabe802c36e0b3b"
            ]
        ]
    },
    {
        "id": "441163e8c74ef300",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"altura\":40}",
        "payloadType": "json",
        "x": 196,
        "y": 792,
        "wires": [
            [
                "d1da5585e175b94b"
            ]
        ]
    },
    {
        "id": "3fabe802c36e0b3b",
        "type": "json",
        "z": "24dfb8ef33f23156",
        "name": "ToObject",
        "property": "parts",
        "action": "obj",
        "pretty": false,
        "x": 282,
        "y": 738,
        "wires": [
            [
                "d1da5585e175b94b"
            ]
        ]
    },
    {
        "id": "d1da5585e175b94b",
        "type": "join",
        "z": "24dfb8ef33f23156",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 454,
        "y": 738,
        "wires": [
            [
                "26d7655b4557f436"
            ]
        ]
    },
    {
        "id": "26d7655b4557f436",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 606,
        "y": 738,
        "wires": []
    },
    {
        "id": "41c7d863051a4670",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "name": "Test",
        "info": "",
        "x": 112,
        "y": 702,
        "wires": []
    },
    {
        "id": "082ff81b8e5c11a5",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Control",
        "func": "const radio = msg.payload.radio\nconst tipo = msg.payload.tipo\nconst id = msg.payload._id\n\nif(!radio || !tipo || !id){\n    msg.statusCode = 400\n}else {\n    msg.payload = {\n        \"_id\": id,\n        radio: radio,\n        tipo: tipo,\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 180,
        "wires": [
            [
                "6f250ffd17df7622"
            ]
        ]
    },
    {
        "id": "6f250ffd17df7622",
        "type": "switch",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 940,
        "y": 180,
        "wires": [
            [
                "78e0dcd76643e9e8"
            ],
            [
                "b40b81c5ddb5b9d7"
            ]
        ]
    },
    {
        "id": "78e0dcd76643e9e8",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Bad Request`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1396,
        "y": 162,
        "wires": [
            [
                "cf907aebfaff3150"
            ]
        ]
    },
    {
        "id": "e40cee6eda6e8e32",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Bad Request`\n}\nmsg.statusCode = 400\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1394,
        "y": 234,
        "wires": [
            [
                "cf907aebfaff3150"
            ]
        ]
    },
    {
        "id": "e669bbeafb4afcca",
        "type": "mongodb-node",
        "z": "24dfb8ef33f23156",
        "mongodb": "ce26f499c263739a",
        "name": "Insert",
        "collection": "container",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 414,
        "y": 918,
        "wires": [
            [
                "7d227760db11ef30"
            ]
        ]
    },
    {
        "id": "476e2c89e8b540e2",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 88,
        "y": 918,
        "wires": [
            [
                "e0d18f11cbfee83e"
            ]
        ]
    },
    {
        "id": "7d227760db11ef30",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 918,
        "wires": []
    },
    {
        "id": "e0d18f11cbfee83e",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "insert",
        "func": "msg.payload = [{ _id: \"1234\", name: 'Anna', age: 1 }];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 918,
        "wires": [
            [
                "e669bbeafb4afcca"
            ]
        ]
    },
    {
        "id": "8be724f883e9b217",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 972,
        "wires": []
    },
    {
        "id": "97d206b39d0d62c3",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 96,
        "y": 972,
        "wires": [
            [
                "39b0262041a8faa3"
            ]
        ]
    },
    {
        "id": "39b0262041a8faa3",
        "type": "mongodb-node",
        "z": "24dfb8ef33f23156",
        "mongodb": "ce26f499c263739a",
        "name": "Buscar Todos",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 300,
        "y": 972,
        "wires": [
            [
                "8be724f883e9b217"
            ]
        ]
    },
    {
        "id": "9dc130e679624321",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 84,
        "y": 1044,
        "wires": [
            [
                "eb9250ed8d5fa23c"
            ]
        ]
    },
    {
        "id": "eb9250ed8d5fa23c",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "name": "Generate ID",
        "func": "const generarId = () => {           //Generar token aleatorio\n    const random = Math.random().toString(32).substring(2);\n    const fecha = Date.now().toString(32);\n    return random + fecha;\n}\n\nmsg.payload = generarId()\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1044,
        "wires": [
            [
                "45fd1215a0e3d612"
            ]
        ]
    },
    {
        "id": "45fd1215a0e3d612",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 408,
        "y": 1044,
        "wires": []
    },
    {
        "id": "7bb3d14fb2f12849",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Generate ID",
        "func": "const generarId = () => {           //Generar token aleatorio\n    const random = Math.random().toString(32).substring(2);\n    const fecha = Date.now().toString(32);\n    return random + fecha;\n}\nmsg.payload._id = generarId()\nmsg.topic = \"id\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 632,
        "y": 180,
        "wires": [
            [
                "082ff81b8e5c11a5"
            ]
        ]
    },
    {
        "id": "b40b81c5ddb5b9d7",
        "type": "mongodb-node",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "mongodb": "ce26f499c263739a",
        "name": "Insert",
        "collection": "container",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 1084,
        "y": 216,
        "wires": [
            [
                "53a920cdc2ec4cec"
            ]
        ]
    },
    {
        "id": "976012fd1e2d5b28",
        "type": "join",
        "z": "24dfb8ef33f23156",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1228,
        "y": 774,
        "wires": [
            [
                "9dce77985314dd34"
            ]
        ]
    },
    {
        "id": "af93c89ea0ec0c19",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "2",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "final",
        "payload": "{\"altura\":40}",
        "payloadType": "json",
        "x": 980,
        "y": 828,
        "wires": [
            [
                "976012fd1e2d5b28"
            ]
        ]
    },
    {
        "id": "9dce77985314dd34",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 774,
        "wires": []
    },
    {
        "id": "299e6da9ad5e8082",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "parts",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "inicio",
        "payload": "{\"radio\":50,\"tipo\":\"cilindro\"}",
        "payloadType": "json",
        "x": 986,
        "y": 774,
        "wires": [
            [
                "976012fd1e2d5b28"
            ]
        ]
    },
    {
        "id": "5b903833fadada49",
        "type": "function",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Armo Respuesta",
        "func": "const id = msg.payload.ops[0]._id\nmsg.payload = {\n    \"_id\": id\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1386,
        "y": 198,
        "wires": [
            [
                "cf907aebfaff3150"
            ]
        ]
    },
    {
        "id": "3abdef68e06537c7",
        "type": "Bme280",
        "z": "24dfb8ef33f23156",
        "name": "",
        "bus": "1",
        "address": "0x76",
        "topic": "bme280",
        "extra": false,
        "x": 246,
        "y": 1152,
        "wires": [
            [
                "6cf3e80b50bb86ff"
            ]
        ]
    },
    {
        "id": "637860d59ab03272",
        "type": "comment",
        "z": "24dfb8ef33f23156",
        "name": "Temperatura Inicial",
        "info": "",
        "x": 252,
        "y": 1116,
        "wires": []
    },
    {
        "id": "e179433c1daa3216",
        "type": "inject",
        "z": "24dfb8ef33f23156",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 66,
        "y": 1152,
        "wires": [
            [
                "3abdef68e06537c7"
            ]
        ]
    },
    {
        "id": "6cf3e80b50bb86ff",
        "type": "debug",
        "z": "24dfb8ef33f23156",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 426,
        "y": 1152,
        "wires": []
    },
    {
        "id": "3f138c214fb07141",
        "type": "subflow:e5b2f8bf37588cc1",
        "z": "24dfb8ef33f23156",
        "g": "f96b8df6fe7c2f8d",
        "name": "Autenticar Simple",
        "x": 486,
        "y": 234,
        "wires": [
            [
                "7bb3d14fb2f12849"
            ]
        ]
    },
    {
        "id": "0d27d53123a1bbed",
        "type": "inject",
        "z": "6f2117e9081c52cf",
        "g": "804bbb462be1f7ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "container",
        "payloadType": "global",
        "x": 152,
        "y": 432,
        "wires": [
            [
                "3032be3270e5c760"
            ]
        ]
    },
    {
        "id": "3032be3270e5c760",
        "type": "debug",
        "z": "6f2117e9081c52cf",
        "g": "804bbb462be1f7ec",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 354,
        "y": 432,
        "wires": []
    },
    {
        "id": "625feb44002a34a5",
        "type": "debug",
        "z": "6f2117e9081c52cf",
        "g": "804bbb462be1f7ec",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 546,
        "y": 468,
        "wires": []
    },
    {
        "id": "43504d1d4acde086",
        "type": "inject",
        "z": "6f2117e9081c52cf",
        "g": "804bbb462be1f7ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 132,
        "y": 468,
        "wires": [
            [
                "d7aab90e7576d914"
            ]
        ]
    },
    {
        "id": "6d1171f8a6947e64",
        "type": "comment",
        "z": "6f2117e9081c52cf",
        "g": "804bbb462be1f7ec",
        "name": "Test",
        "info": "",
        "x": 92,
        "y": 396,
        "wires": []
    },
    {
        "id": "8d548b6e221babc1",
        "type": "mongodb-node",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "mongodb": "ce26f499c263739a",
        "name": "Buscar ID",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 282,
        "y": 108,
        "wires": [
            [
                "7293939f3e187b8f"
            ]
        ]
    },
    {
        "id": "6bd21c5006458b5c",
        "type": "http in",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "ChangeContainer",
        "url": "/change",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 118,
        "y": 108,
        "wires": [
            [
                "8d548b6e221babc1"
            ]
        ]
    },
    {
        "id": "ba4fda0947ea90bf",
        "type": "debug",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 282,
        "y": 198,
        "wires": []
    },
    {
        "id": "09647057c5dbe213",
        "type": "catch",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "",
        "scope": [
            "8d548b6e221babc1"
        ],
        "uncaught": false,
        "x": 274,
        "y": 144,
        "wires": [
            [
                "ba4fda0947ea90bf"
            ]
        ]
    },
    {
        "id": "7293939f3e187b8f",
        "type": "function",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "To object",
        "func": "const container = {\n    \"container\": msg.payload[0]\n}\nmsg.payload = container\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 426,
        "y": 108,
        "wires": [
            [
                "868ac3f382160896"
            ]
        ]
    },
    {
        "id": "868ac3f382160896",
        "type": "switch",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "",
        "property": "payload.container",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 562,
        "y": 108,
        "wires": [
            [
                "2922916575d2fbac"
            ],
            [
                "c4f65e8b745f188a"
            ]
        ]
    },
    {
        "id": "2922916575d2fbac",
        "type": "function",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Container no encontrado`\n}\nmsg.statusCode = 404\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 748,
        "y": 72,
        "wires": [
            [
                "8d436f8455148d8c"
            ]
        ]
    },
    {
        "id": "c4f65e8b745f188a",
        "type": "change",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "Actual Container",
        "rules": [
            {
                "t": "set",
                "p": "container",
                "pt": "global",
                "to": "payload.container",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 728,
        "y": 126,
        "wires": [
            [
                "3fc9484950c5daec"
            ]
        ]
    },
    {
        "id": "58335f524a98764c",
        "type": "function",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "Armo Respuesta",
        "func": "const id = msg.payload.container._id\nmsg.payload = {\n    \"_id\": id\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1098,
        "y": 126,
        "wires": [
            [
                "8d436f8455148d8c"
            ]
        ]
    },
    {
        "id": "8d436f8455148d8c",
        "type": "http response",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1264,
        "y": 72,
        "wires": []
    },
    {
        "id": "d7aab90e7576d914",
        "type": "mongodb-node",
        "z": "6f2117e9081c52cf",
        "g": "804bbb462be1f7ec",
        "mongodb": "ce26f499c263739a",
        "name": "Buscar Todos",
        "collection": "container",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 336,
        "y": 468,
        "wires": [
            [
                "625feb44002a34a5"
            ]
        ]
    },
    {
        "id": "3fc9484950c5daec",
        "type": "change",
        "z": "6f2117e9081c52cf",
        "g": "8df2068a65345626",
        "name": "Actual Container",
        "rules": [
            {
                "t": "set",
                "p": "container.primera",
                "pt": "global",
                "to": "true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 908,
        "y": 126,
        "wires": [
            [
                "58335f524a98764c"
            ]
        ]
    },
    {
        "id": "992c68eaf7bee79d",
        "type": "mqtt in",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "topic": "Mediciones",
        "qos": "2",
        "datatype": "utf8",
        "broker": "8cc4005609a73937",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 92,
        "y": 360,
        "wires": [
            [
                "7990cab44ba77539"
            ]
        ]
    },
    {
        "id": "7990cab44ba77539",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 246,
        "y": 360,
        "wires": [
            [
                "16f30e7171618337"
            ]
        ]
    },
    {
        "id": "398fd7c154a5c79a",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "calcular nivel",
        "func": "const contenedor = global.get('container')\nif(contenedor.primera){\n    msg.payload.nivel = 0\n    return msg\n}\nmsg.payload.nivel = contenedor.altura - msg.payload.distancia\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 632,
        "y": 558,
        "wires": [
            [
                "117224e504b86535"
            ]
        ]
    },
    {
        "id": "117224e504b86535",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Calcular Volumen",
        "func": "const contenedor = global.get('container')\n\nconst beta = 0.00021\nlet volume\nlet temperaturaI\n\nif(contenedor.primera){\n    msg.payload.volumen = 0\n    return msg\n}  \nelse {\n    temperaturaI = contenedor.ultima.temperatura\n    if(contenedor.tipo === \"tacho\"){\n        volume = Math.PI * (contenedor.radio ** 2) * msg.payload.nivel * (1 + beta * (msg.payload.temperatura - temperaturaI)) \n    }else{\n        //TODO Cubo\n    }\n}\n\nmsg.payload.volumen = volume\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 558,
        "wires": [
            [
                "c010df3fd2223678"
            ]
        ]
    },
    {
        "id": "01d9d2d50b595f38",
        "type": "link out",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Nivel",
        "mode": "link",
        "links": [
            "fcd2dd966646f325"
        ],
        "x": 1641,
        "y": 594,
        "wires": []
    },
    {
        "id": "c010df3fd2223678",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Calcular Caudal",
        "func": "const contenedor = global.get('container')\nlet volumeI\nlet currentTime = Date.now()\nlet timeI\nlet caudal = 0\n\nif(contenedor.primera){\n    msg.payload.caudal = 0\n    return msg\n}  \nelse {\n    volumeI = contenedor.ultima.volumen\n    timeI = contenedor.ultima.tiempo\n    caudal = Math.abs(msg.payload.volumen - volumeI) / (Math.abs(currentTime - timeI) / 1000);\n}\n\nmsg.payload.caudal = caudal\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 998,
        "y": 558,
        "wires": [
            [
                "e935e1206b5696f8"
            ]
        ]
    },
    {
        "id": "e935e1206b5696f8",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Calcular ETA",
        "func": "const contenedor = global.get('container')\n\nlet eta = 0;\n\nif(contenedor.primera){\n    msg.payload.eta = 0\n    return msg\n}  \nelse {\n    const beta = 0.00021\n    let volume\n    let temperaturaI\n    temperaturaI = contenedor.ultima.temperatura\n    if (contenedor.tipo === \"tacho\") {\n        volume = Math.PI * (contenedor.radio ** 2) * contenedor.altura * (1 + beta * (msg.payload.temperatura - temperaturaI))\n    } else {\n        //TODO Cubo\n    }\n    if(msg.payload.caudal != 0){\n        eta = volume / msg.payload.caudal;\n    }else{\n        eta = 0\n    }\n\n}\n\nmsg.payload.eta = eta\nreturn msg;\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1168,
        "y": 558,
        "wires": [
            [
                "be6dc0ec1b17542c"
            ]
        ]
    },
    {
        "id": "be6dc0ec1b17542c",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Calcular Estado",
        "func": "const contenedor = global.get('container')\n\nlet levelMax = contenedor.altura\nlet low = levelMax / 4\nlet lowLow = levelMax / 8\nlet high = levelMax * 3 / 4\nlet highHigh = levelMax * 7 / 8\nlet estado\n\nif(contenedor.primera){\n    msg.payload.estado = 0\n    return msg\n}  \nelse {\n    const level = msg.payload.nivel\n    //Normal, no alert\n    if (level >= low && level <= high)\n        estado = \"Normal\"\n    //Low\n    if (level < low) {\n        estado = \"Low\"\n    }\n    //Low Low\n    if (level < lowLow) {\n        estado = \"Low-Low\"\n    }\n    //High\n    if (level > high) {\n        estado = \"High\"\n    }\n    //High High\n    if (level > highHigh) {\n        estado = \"High-High\"\n    }\n\n}\n\nmsg.payload.estado = estado\nreturn msg;\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1342,
        "y": 558,
        "wires": [
            [
                "cffca188f996e5f6"
            ]
        ]
    },
    {
        "id": "cffca188f996e5f6",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Armar objeto",
        "func": "let currentTime = Date.now()\nconst medicion = {\n    \"nivel\": msg.payload.nivel,\n    \"volumen\": msg.payload.volumen,\n    \"ETA\": msg.payload.eta,\n    \"caudal\": msg.payload.caudal,\n    \"estado\": msg.payload.estado,\n    \"temperatura\":msg.payload.temperatura,\n    \"tiempo\": currentTime\n}\nmsg.topic = \"inicial\"\nmsg.payload.medicion = medicion\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1514,
        "y": 558,
        "wires": [
            [
                "2614e54fb8a332d7",
                "341d6a0613209ac4",
                "01d9d2d50b595f38"
            ]
        ]
    },
    {
        "id": "16f30e7171618337",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "property": "container.primera",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 374,
        "y": 360,
        "wires": [
            [
                "0788541e16ec93e4",
                "97d5a4872625b3ec"
            ],
            [
                "398fd7c154a5c79a",
                "e752c19968b79169"
            ]
        ]
    },
    {
        "id": "67d397237c754ae9",
        "type": "change",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "Primera",
        "rules": [
            {
                "t": "set",
                "p": "container.primera",
                "pt": "global",
                "to": "false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "container.temperatura",
                "pt": "global",
                "to": "payload.inicial.temperatura",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container.altura",
                "pt": "global",
                "to": "msg.payload.inicial.distancia",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1434,
        "y": 270,
        "wires": [
            [
                "b9a9871933956357"
            ]
        ]
    },
    {
        "id": "97d5a4872625b3ec",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "Update",
        "func": "const contenedor = global.get('container')\n\nvar newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: contenedor._id\n    },\n    'payload': {    \n        $set: {\n            \"altura\": (msg.payload.distancia),\n            \"temperatura\": msg.payload.temperatura\n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 342,
        "wires": [
            [
                "4f54c4f907ce8495"
            ]
        ]
    },
    {
        "id": "2614e54fb8a332d7",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Update",
        "func": "const contenedor = global.get('container')\n\nvar newMsg = {\n    'collection': 'container',\n    'operation': 'update',\n    'query': {\n        _id: contenedor._id\n    },\n    'payload': { \n        $push: {   \n            \"mediciones\" : msg.payload.medicion\n        },\n        $set: {\n            \"ultimaMedicion\": msg.payload.medicion\n        },\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1686,
        "y": 522,
        "wires": [
            [
                "3f379c851dad510c"
            ]
        ]
    },
    {
        "id": "4f54c4f907ce8495",
        "type": "mongodb-node",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "mongodb": "ce26f499c263739a",
        "name": "Update",
        "collection": "container",
        "operation": "update",
        "upsert": false,
        "multi": false,
        "x": 774,
        "y": 342,
        "wires": [
            [
                "9a05ebef32842a9f"
            ]
        ]
    },
    {
        "id": "3f379c851dad510c",
        "type": "mongodb-node",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "mongodb": "ce26f499c263739a",
        "name": "Update",
        "collection": "container",
        "operation": "update",
        "upsert": false,
        "multi": false,
        "x": 1830,
        "y": 522,
        "wires": [
            [
                "1e273ddbc8b43d3a"
            ]
        ]
    },
    {
        "id": "9a05ebef32842a9f",
        "type": "json",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 902,
        "y": 342,
        "wires": [
            [
                "ebca2435e78c8506"
            ]
        ]
    },
    {
        "id": "ebca2435e78c8506",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\nmsg.topic = \"response\"\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1026,
        "y": 342,
        "wires": [
            [
                "c9ebf2ea9b954364"
            ]
        ]
    },
    {
        "id": "c749fa063525f581",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "",
        "property": "payload.response.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1288,
        "y": 306,
        "wires": [
            [
                "67d397237c754ae9"
            ],
            [
                "a6c25776d746e1b6"
            ]
        ]
    },
    {
        "id": "a6c25776d746e1b6",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Update Error`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1474,
        "y": 324,
        "wires": [
            [
                "8ea5553d0d298f58"
            ]
        ]
    },
    {
        "id": "8ea5553d0d298f58",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1656,
        "y": 324,
        "wires": []
    },
    {
        "id": "c9ebf2ea9b954364",
        "type": "join",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1162,
        "y": 306,
        "wires": [
            [
                "c749fa063525f581"
            ]
        ]
    },
    {
        "id": "0788541e16ec93e4",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "function 7",
        "func": "msg.topic = \"inicial\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 288,
        "wires": [
            [
                "c9ebf2ea9b954364"
            ]
        ]
    },
    {
        "id": "341d6a0613209ac4",
        "type": "join",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2254,
        "y": 558,
        "wires": [
            [
                "6b10a921aa8102b4"
            ]
        ]
    },
    {
        "id": "1e273ddbc8b43d3a",
        "type": "json",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1966,
        "y": 522,
        "wires": [
            [
                "a55530c27f666fab"
            ]
        ]
    },
    {
        "id": "a55530c27f666fab",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "to JSON",
        "func": "let s = msg.payload.replace(/\\\\n/g, \"\\\\n\")\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, \"\\\\&\")\n    .replace(/\\\\r/g, \"\\\\r\")\n    .replace(/\\\\t/g, \"\\\\t\")\n    .replace(/\\\\b/g, \"\\\\b\")\n    .replace(/\\\\f/g, \"\\\\f\");\n// Remove non-printable and other non-valid JSON characters\ns = s.replace(/[\\u0000-\\u0019]+/g, \"\");\nvar o = JSON.parse(s);\n\nmsg.payload = o;\nmsg.topic = \"response\"\n\n//let data = JSON.parse(msg.payload);\n//console.log(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 522,
        "wires": [
            [
                "341d6a0613209ac4"
            ]
        ]
    },
    {
        "id": "6b10a921aa8102b4",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "",
        "property": "payload.response.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2380,
        "y": 558,
        "wires": [
            [
                "96888705c3e7a435"
            ],
            [
                "7d1d4428a0b72f51"
            ]
        ]
    },
    {
        "id": "7d1d4428a0b72f51",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Update Error`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2564,
        "y": 594,
        "wires": [
            [
                "2a2629d7e170136f"
            ]
        ]
    },
    {
        "id": "2a2629d7e170136f",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2748,
        "y": 594,
        "wires": []
    },
    {
        "id": "2d3bebef2ddfe095",
        "type": "change",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Actualizar",
        "rules": [
            {
                "t": "set",
                "p": "container.ultima",
                "pt": "global",
                "to": "payload.inicial.medicion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2724,
        "y": 486,
        "wires": [
            [
                "80991980289b0df5"
            ]
        ]
    },
    {
        "id": "96888705c3e7a435",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Alertar?",
        "func": "const contenedor = global.get('container')\n\nconst estado = msg.payload.inicial.medicion.estado\nconst estadoAnterior = contenedor.ultima.estado\n\nif(estado == estadoAnterior){\n    msg.payload.alert = false\n    return msg\n}else{\n    if(estado == \"Normal\"){\n        msg.payload.alert = false\n        return msg\n    }else{\n        msg.payload.alert = true\n        return msg\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2526,
        "y": 540,
        "wires": [
            [
                "6bb2c50c171f11c5",
                "2d3bebef2ddfe095"
            ]
        ]
    },
    {
        "id": "510d9a226ec56fbf",
        "type": "change",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "Actualizar",
        "rules": [
            {
                "t": "set",
                "p": "container.ultima",
                "pt": "global",
                "to": "payload.medicion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1722,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "b9a9871933956357",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "75e02b13f632c271",
        "name": "Tiempo",
        "func": "let currentTime = Date.now()\nconst medicion = {\n    \"nivel\": 0,\n    \"volumen\": 0,\n    \"ETA\": 0,\n    \"caudal\": 0,\n    \"estado\": \"None\",\n    \"temperatura\": msg.payload.inicial.temperatura,\n    \"tiempo\": currentTime,\n    \"distancia\": msg.payload.inicial.distancia\n}\nmsg.payload.medicion = medicion\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1578,
        "y": 270,
        "wires": [
            [
                "510d9a226ec56fbf"
            ]
        ]
    },
    {
        "id": "d5decfb93e0fba8c",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Calibrar",
        "func": "const contenedor = global.get('container')\nconst distancia = msg.payload.distancia\nconst distanciaAnterior = contenedor.ultima.distancia\nconst delta = Math.abs(distancia-distanciaAnterior)\nconst distanciaInicial = contenedor.altura\n\nif (delta < 0.2 || \n    delta > 10 || \n    distancia > distanciaInicial\n    )\n    msg.payload.invalido = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 588,
        "y": 414,
        "wires": [
            [
                "c3d9c0b996065cc9"
            ]
        ]
    },
    {
        "id": "c3d9c0b996065cc9",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "property": "payload.invalido",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 716,
        "y": 414,
        "wires": [
            [
                "1e66545d62a91b5c"
            ],
            [
                "398fd7c154a5c79a"
            ]
        ]
    },
    {
        "id": "1e66545d62a91b5c",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "Armo Respuesta Error",
        "func": "msg.payload = {\n    msg: `Insignificante`\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 926,
        "y": 414,
        "wires": [
            [
                "ecf79dd56c1a923c"
            ]
        ]
    },
    {
        "id": "ecf79dd56c1a923c",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 414,
        "wires": []
    },
    {
        "id": "80991980289b0df5",
        "type": "change",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Actualizar",
        "rules": [
            {
                "t": "set",
                "p": "container.ultima.distancia",
                "pt": "global",
                "to": "payload.inicial.distancia",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2868,
        "y": 486,
        "wires": [
            []
        ]
    },
    {
        "id": "6bb2c50c171f11c5",
        "type": "switch",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "",
        "property": "payload.alert",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2714,
        "y": 540,
        "wires": [
            [
                "556a47b6bb410fe5"
            ],
            []
        ]
    },
    {
        "id": "556a47b6bb410fe5",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "name": "Alerta",
        "func": "const contenedor = global.get('container')\n\nmsg.topic = \"Alert Node-Red\"\nconst message = `\nAlerta: ${msg.payload.inicial.medicion.estado}\nContenedor: ${contenedor._id}\nTemperatura: ${msg.payload.inicial.medicion.temperatura}°C\nNivel: ${msg.payload.inicial.medicion.nivel}\n`\nmsg.payload = message\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 522,
        "wires": [
            [
                "66643a7e4299b06b"
            ]
        ]
    },
    {
        "id": "66643a7e4299b06b",
        "type": "e-mail",
        "z": "bbf8bb52d5a439a2",
        "g": "b65ae5fa73661556",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "tridentisimo@gmail.com",
        "dname": "Mail",
        "x": 2966,
        "y": 522,
        "wires": []
    },
    {
        "id": "626c4e9cb546bcf5",
        "type": "function",
        "z": "bbf8bb52d5a439a2",
        "name": "function 17",
        "func": "const st1 = \"Low\"\nconst st2 = \"Low\"\n\nmsg.payload = {}\n\nif(st1 == st2){\n    msg.payload.alert = true\n}else{\n    msg.payload.alert = false\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2968,
        "y": 180,
        "wires": [
            [
                "18a80fb5f3d6e13f"
            ]
        ]
    },
    {
        "id": "18a80fb5f3d6e13f",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 64",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3156,
        "y": 162,
        "wires": []
    },
    {
        "id": "7ddf02c2a68b2ef7",
        "type": "inject",
        "z": "bbf8bb52d5a439a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2802,
        "y": 144,
        "wires": [
            [
                "626c4e9cb546bcf5"
            ]
        ]
    },
    {
        "id": "e752c19968b79169",
        "type": "debug",
        "z": "bbf8bb52d5a439a2",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 492,
        "y": 468,
        "wires": []
    },
    {
        "id": "215762e78937528b",
        "type": "inject",
        "z": "a4016556e17b5c1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "fa75a55c1facad92"
            ]
        ]
    },
    {
        "id": "fa75a55c1facad92",
        "type": "file in",
        "z": "a4016556e17b5c1d",
        "name": "Reading Project Settings",
        "filename": "/data/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "274e08b421da8a4c"
            ]
        ]
    },
    {
        "id": "274e08b421da8a4c",
        "type": "json",
        "z": "a4016556e17b5c1d",
        "name": "To Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 560,
        "y": 180,
        "wires": [
            [
                "30111c67affe5831"
            ]
        ]
    },
    {
        "id": "30111c67affe5831",
        "type": "change",
        "z": "a4016556e17b5c1d",
        "name": "Save Settings",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 180,
        "wires": [
            [
                "272943c8ddf8b294"
            ]
        ]
    },
    {
        "id": "272943c8ddf8b294",
        "type": "link out",
        "z": "a4016556e17b5c1d",
        "name": "Output Global Config",
        "mode": "link",
        "links": [
            "9eb59bdd79987113"
        ],
        "x": 875,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f9725ac22de3368",
        "type": "watch",
        "z": "a4016556e17b5c1d",
        "name": "Settings File Observer",
        "files": "/data/config.json",
        "recursive": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "fa75a55c1facad92"
            ]
        ]
    },
    {
        "id": "5ddd8e81bae42328",
        "type": "catch",
        "z": "a4016556e17b5c1d",
        "name": "Settings File doesnt exists",
        "scope": [
            "fa75a55c1facad92"
        ],
        "uncaught": false,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "3ecd2c74440758b6"
            ]
        ]
    },
    {
        "id": "3ecd2c74440758b6",
        "type": "function",
        "z": "a4016556e17b5c1d",
        "name": "Create Default Settings File",
        "func": "msg.payload = {\n    \"urlBase\": \"192.168.192.1:1880\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "7cd32969a127584f"
            ]
        ]
    },
    {
        "id": "7cd32969a127584f",
        "type": "file",
        "z": "a4016556e17b5c1d",
        "name": "Write Settings File",
        "filename": "/data/config.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "5f3ebd2c4b0ec8c7"
            ]
        ]
    },
    {
        "id": "5f3ebd2c4b0ec8c7",
        "type": "delay",
        "z": "a4016556e17b5c1d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "fa75a55c1facad92"
            ]
        ]
    },
    {
        "id": "26a516455a83df78",
        "type": "http in",
        "z": "a4016556e17b5c1d",
        "name": "HTTP Settings Return",
        "url": "/config",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "18af7c3b2762f0f3"
            ]
        ]
    },
    {
        "id": "ebc4dc30845099be",
        "type": "http in",
        "z": "a4016556e17b5c1d",
        "name": "HTTP Settings Update",
        "url": "/config",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "50618526bee2d8b3"
            ]
        ]
    },
    {
        "id": "18af7c3b2762f0f3",
        "type": "file in",
        "z": "a4016556e17b5c1d",
        "name": "Reading Project Settings",
        "filename": "/data/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "d11e1671314218cb"
            ]
        ]
    },
    {
        "id": "d11e1671314218cb",
        "type": "json",
        "z": "a4016556e17b5c1d",
        "name": "To Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "a962ba020c04787a"
            ]
        ]
    },
    {
        "id": "a962ba020c04787a",
        "type": "http response",
        "z": "a4016556e17b5c1d",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "50618526bee2d8b3",
        "type": "file",
        "z": "a4016556e17b5c1d",
        "name": "Write Settings File",
        "filename": "/data/config.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 350,
        "y": 460,
        "wires": [
            [
                "16bb1117458b5a80"
            ]
        ]
    },
    {
        "id": "16bb1117458b5a80",
        "type": "http response",
        "z": "a4016556e17b5c1d",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "daa3e35243c049b6",
        "type": "inject",
        "z": "a4016556e17b5c1d",
        "name": "checkBK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 900,
        "wires": [
            [
                "166e9f9a88dca544"
            ]
        ]
    },
    {
        "id": "166e9f9a88dca544",
        "type": "http request",
        "z": "a4016556e17b5c1d",
        "name": "Dummy",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.192.6:4000/api/dummy",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 240,
        "y": 900,
        "wires": [
            [
                "962a5430936997b3"
            ]
        ]
    },
    {
        "id": "962a5430936997b3",
        "type": "function",
        "z": "a4016556e17b5c1d",
        "name": "function 1",
        "func": "if(msg.statusCode != 200)\n    msg.statusCode = 503\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 900,
        "wires": [
            [
                "76513d761b556e71"
            ]
        ]
    },
    {
        "id": "76513d761b556e71",
        "type": "debug",
        "z": "a4016556e17b5c1d",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "statusCode",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 900,
        "wires": []
    },
    {
        "id": "dbc10af27f240d2b",
        "type": "catch",
        "z": "a4016556e17b5c1d",
        "name": "",
        "scope": [
            "166e9f9a88dca544"
        ],
        "uncaught": false,
        "x": 230,
        "y": 980,
        "wires": [
            [
                "450e90016ed3071b"
            ]
        ]
    },
    {
        "id": "450e90016ed3071b",
        "type": "debug",
        "z": "a4016556e17b5c1d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 980,
        "wires": []
    },
    {
        "id": "0bb4c05476eddafa",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "f44c60079148d0f6"
            ]
        ]
    },
    {
        "id": "8cfcc9f23cc5bbe1",
        "type": "inject",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 350,
        "y": 460,
        "wires": [
            [
                "f44c60079148d0f6"
            ]
        ]
    },
    {
        "id": "9910b860768673f9",
        "type": "mqtt in",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "topic": "led",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8cc4005609a73937",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 520,
        "wires": [
            [
                "dabb8d731704b0a5"
            ]
        ]
    },
    {
        "id": "f44c60079148d0f6",
        "type": "pi-gpiod out",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "host": "192.168.192.1",
        "port": "8888",
        "pin": "26",
        "set": true,
        "level": "1",
        "out": "out",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 840,
        "y": 450,
        "wires": []
    },
    {
        "id": "4bdeaa14fb69ac69",
        "type": "comment",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "commands",
        "info": "docker exec -it mosquitto-mosquitto-1 sh\nmosquitto_pub -t led -m 1 -h localhost\nmosquitto_pub -t led -m 0 -h localhost\nmosquitto_pub -t led -m fiesta -h localhost",
        "x": 210,
        "y": 522,
        "wires": []
    },
    {
        "id": "dabb8d731704b0a5",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "function 8",
        "func": "if(msg.payload==1){\n    return [msg,null,null];\n}\nif (msg.payload == 0) {\n    return [null, msg, null];\n}\nif (msg.payload === \"fiesta\") {\n    return [null, null, msg];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 528,
        "y": 504,
        "wires": [
            [
                "f44c60079148d0f6"
            ],
            [
                "f44c60079148d0f6"
            ],
            [
                "98a534a7b7207554"
            ]
        ]
    },
    {
        "id": "98a534a7b7207554",
        "type": "change",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[1,0,1,0,1,0,1,0,1,0]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 712,
        "y": 540,
        "wires": [
            [
                "263c05dfb670e725"
            ]
        ]
    },
    {
        "id": "f7ae7e7adda4ca49",
        "type": "delay",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "pauseType": "rate",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1024,
        "y": 540,
        "wires": [
            [
                "f44c60079148d0f6",
                "20cd2e0a6cd772da"
            ]
        ]
    },
    {
        "id": "263c05dfb670e725",
        "type": "split",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 868,
        "y": 540,
        "wires": [
            [
                "f7ae7e7adda4ca49"
            ]
        ]
    },
    {
        "id": "20cd2e0a6cd772da",
        "type": "debug",
        "z": "4e4be63df05180bc",
        "g": "45a0e8bbf62bd058",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1218,
        "y": 540,
        "wires": []
    },
    {
        "id": "bcaf772ec26ff4aa",
        "type": "mqtt in",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "",
        "topic": "led-rgb",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8cc4005609a73937",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 356,
        "y": 702,
        "wires": [
            [
                "a8df507b71d607a7"
            ]
        ]
    },
    {
        "id": "a8df507b71d607a7",
        "type": "json",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "ToObject",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 526,
        "y": 702,
        "wires": [
            [
                "0b0aced60a645c2a"
            ]
        ]
    },
    {
        "id": "0b0aced60a645c2a",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "function 13",
        "func": "function convertirValor(valor) {\n    // Asegurarse de que el valor esté en el rango de 0 a 180\n    valor = Math.max(0, Math.min(255, valor));\n\n    // Calcular el valor correspondiente en el rango de 1 a 13\n    if (valor === 0) {\n        return 0;\n    } else if (valor === 255) {\n        return 100;\n    } else {\n        // Calcular el valor proporcional en el rango de 1 a 13\n        return Math.round((valor - 1) / 255 * 99) + 1;\n    }\n}\n\nmsg.payload[0] = convertirValor(msg.payload[0])\nmsg.payload[1] = convertirValor(msg.payload[1])\nmsg.payload[2] = convertirValor(msg.payload[2])\n\nmsg.payload.rojo = msg.payload[0];\nmsg.payload.verde = msg.payload[1];\nmsg.payload.azul = msg.payload[2];\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 696,
        "y": 702,
        "wires": [
            [
                "8b280ba5b1c45db5",
                "f68db911cabcbb2d",
                "fb3e3c576a739acb"
            ]
        ]
    },
    {
        "id": "8b280ba5b1c45db5",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "Rojo",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 702,
        "wires": [
            [
                "7af592aebddb513d"
            ]
        ]
    },
    {
        "id": "f68db911cabcbb2d",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "Verde",
        "func": "msg.payload = msg.payload[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 738,
        "wires": [
            [
                "c22f2675d5959bd2"
            ]
        ]
    },
    {
        "id": "fb3e3c576a739acb",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "Azul",
        "func": "msg.payload = msg.payload[2];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 878,
        "y": 774,
        "wires": [
            [
                "24950096ec3ba585"
            ]
        ]
    },
    {
        "id": "24950096ec3ba585",
        "type": "pi-gpiod out",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "azul",
        "host": "192.168.192.1",
        "port": "8888",
        "pin": "16",
        "set": false,
        "level": "1",
        "out": "pwm",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1032,
        "y": 774,
        "wires": []
    },
    {
        "id": "c22f2675d5959bd2",
        "type": "pi-gpiod out",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "verde",
        "host": "192.168.192.1",
        "port": "8888",
        "pin": "20",
        "set": false,
        "level": "1",
        "out": "pwm",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1032,
        "y": 738,
        "wires": []
    },
    {
        "id": "7af592aebddb513d",
        "type": "pi-gpiod out",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "rouge",
        "host": "192.168.192.1",
        "port": "8888",
        "pin": "21",
        "set": false,
        "level": "1",
        "out": "pwm",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1032,
        "y": 702,
        "wires": []
    },
    {
        "id": "ccba867a1161b2b6",
        "type": "comment",
        "z": "4e4be63df05180bc",
        "g": "2227761e92b67b79",
        "name": "commands",
        "info": "docker exec -it mosquitto-mosquitto-1 sh\nmosquitto_pub -t led-rgb -m [0,0,100] -h localhost",
        "x": 210,
        "y": 702,
        "wires": []
    },
    {
        "id": "7ff20f40071be735",
        "type": "pi-gpiod out",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "servo",
        "host": "192.168.192.1",
        "port": "8888",
        "pin": "17",
        "set": false,
        "level": "1",
        "out": "pwm",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "50",
        "x": 1048,
        "y": 972,
        "wires": []
    },
    {
        "id": "7de7a5799c495cf1",
        "type": "debug",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 906,
        "y": 1098,
        "wires": []
    },
    {
        "id": "8a45027ce6924475",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "function 15",
        "func": "if(msg.payload===\"fiesta\"){\n    return [null,msg];\n}\n\n// 1 -> 0 grados\n// 13 -> 180\n// 7 -> 90\nfunction convertirValor(valor) {\n    // Asegurarse de que el valor esté en el rango de 0 a 180\n    valor = Math.max(0, Math.min(180, valor));\n\n    // Calcular el valor correspondiente en el rango de 1 a 13\n    if (valor === 0) {\n        return 1;\n    } else if (valor === 180) {\n        return 13;\n    } else {\n        // Calcular el valor proporcional en el rango de 1 a 13\n        return Math.round((valor - 1) / 180 * 12) + 1;\n    }\n}\n\nmsg.payload = convertirValor(msg.payload)\nreturn [msg, null];\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 538,
        "y": 990,
        "wires": [
            [
                "7ff20f40071be735"
            ],
            [
                "7a5da6b85535d996"
            ]
        ]
    },
    {
        "id": "1852771f1fc1a767",
        "type": "mqtt in",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "",
        "topic": "servo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8cc4005609a73937",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 374,
        "y": 990,
        "wires": [
            [
                "8a45027ce6924475"
            ]
        ]
    },
    {
        "id": "7a5da6b85535d996",
        "type": "function",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "function 16",
        "func": "const random = () => {\n    return Math.floor(Math.random() * 14);\n}\nlet list = [];\nfor (let index = 0; index < 10; index++) {\n    list.push(random());\n}\n//msg.payload = random();\nmsg.payload = list;\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 704,
        "y": 1044,
        "wires": [
            [
                "7de7a5799c495cf1",
                "981f34528450af53"
            ]
        ]
    },
    {
        "id": "0c72d76a8ea145a2",
        "type": "delay",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1042,
        "y": 1044,
        "wires": [
            [
                "7ff20f40071be735"
            ]
        ]
    },
    {
        "id": "981f34528450af53",
        "type": "split",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 886,
        "y": 1044,
        "wires": [
            [
                "0c72d76a8ea145a2"
            ]
        ]
    },
    {
        "id": "0b3025c242d35a14",
        "type": "comment",
        "z": "4e4be63df05180bc",
        "g": "cce602401fabbb1d",
        "name": "commands",
        "info": "docker exec -it mosquitto-mosquitto-1 sh\nmosquitto_pub -t servo -m fiesta -h localhost\nmosquitto_pub -t servo -m 10 -h localhost",
        "x": 210,
        "y": 990,
        "wires": []
    },
    {
        "id": "fcd2dd966646f325",
        "type": "link in",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "link in 1",
        "links": [
            "01d9d2d50b595f38"
        ],
        "x": 129,
        "y": 414,
        "wires": [
            [
                "45eceda707b8bf30",
                "0b8e0b9250f96660",
                "7c1f59fa4980e498",
                "54afa9a6f678ad33",
                "f797ca31db815d2e",
                "16c05f905226675b",
                "1c9f8dbd6a88c731"
            ]
        ]
    },
    {
        "id": "60640ed9c276b0c2",
        "type": "ui_gauge",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "",
        "group": "57a3c8c6be82297f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Nivel",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 626,
        "y": 270,
        "wires": []
    },
    {
        "id": "45eceda707b8bf30",
        "type": "debug",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 900,
        "wires": []
    },
    {
        "id": "0b8e0b9250f96660",
        "type": "function",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "Nivel",
        "func": "let contenedor = global.get(\"container\");\nlet value = (msg.payload.nivel / contenedor.altura) * 100;\n\nmsg = {\n    ui_control: {\n        \"gtype\": \"wave\",\n        \"min\": 0,\n        \"max\": 100\n\n    },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 392,
        "y": 306,
        "wires": [
            [
                "60640ed9c276b0c2",
                "c66e4d397b226ab1"
            ]
        ]
    },
    {
        "id": "db9656a69f41d1ed",
        "type": "ui_chart",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 1,
        "width": "10",
        "height": "12",
        "label": "Temperatura",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 646,
        "y": 414,
        "wires": [
            []
        ]
    },
    {
        "id": "7c1f59fa4980e498",
        "type": "function",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "Temperatura",
        "func": "var numero = msg.payload.temperatura;\nvar value = parseFloat(numero.toFixed(2));\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 412,
        "y": 414,
        "wires": [
            [
                "db9656a69f41d1ed",
                "601e4cf9c4aaa9ae"
            ]
        ]
    },
    {
        "id": "8b8ada14934763a1",
        "type": "ui_chart",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 1,
        "width": "10",
        "height": "12",
        "label": "Caudal",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 636,
        "y": 522,
        "wires": [
            []
        ]
    },
    {
        "id": "54afa9a6f678ad33",
        "type": "function",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "Caudal",
        "func": "var numero = msg.payload.caudal;\nvar value = parseFloat(numero.toFixed(2));\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 402,
        "y": 522,
        "wires": [
            [
                "8b8ada14934763a1",
                "e889061a5442645f"
            ]
        ]
    },
    {
        "id": "029275760a442050",
        "type": "ui_text",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "group": "57a3c8c6be82297f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ETA",
        "format": "{{msg.payload}} seg",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 626,
        "y": 594,
        "wires": []
    },
    {
        "id": "f797ca31db815d2e",
        "type": "function",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "ETA",
        "func": "var numero = msg.payload.eta;\nvar value = parseFloat(numero.toFixed(0));\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 396,
        "y": 594,
        "wires": [
            [
                "029275760a442050"
            ]
        ]
    },
    {
        "id": "601e4cf9c4aaa9ae",
        "type": "ui_text",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "group": "57a3c8c6be82297f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatura",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 646,
        "y": 378,
        "wires": []
    },
    {
        "id": "e889061a5442645f",
        "type": "ui_text",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "group": "57a3c8c6be82297f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Caudal",
        "format": "{{msg.payload}} cm³/s",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 636,
        "y": 486,
        "wires": []
    },
    {
        "id": "c66e4d397b226ab1",
        "type": "ui_chart",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 1,
        "width": "10",
        "height": "12",
        "label": "Nivel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 626,
        "y": 306,
        "wires": [
            []
        ]
    },
    {
        "id": "35cdb466c3c159dc",
        "type": "ui_chart",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "",
        "group": "17d19835de663e2f",
        "order": 1,
        "width": "10",
        "height": "12",
        "label": "Volumen",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 636,
        "y": 774,
        "wires": [
            []
        ]
    },
    {
        "id": "16c05f905226675b",
        "type": "function",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "Nivel",
        "func": "var numero = msg.payload.volumen;\nvar value = parseFloat(numero.toFixed(2));\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 392,
        "y": 774,
        "wires": [
            [
                "35cdb466c3c159dc",
                "87d48a4a6366a893"
            ]
        ]
    },
    {
        "id": "87d48a4a6366a893",
        "type": "ui_text",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "group": "57a3c8c6be82297f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Volumen",
        "format": "{{msg.payload}} cm³",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 636,
        "y": 738,
        "wires": []
    },
    {
        "id": "1c9f8dbd6a88c731",
        "type": "function",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "name": "Estado",
        "func": "var value = msg.payload.estado\n\nmsg = {\n    // ui_control: {\n    //     \"gtype\": \"wave\",\n    //     \"min\": 0,\n    //     \"max\": 100\n    // },\n    payload: value\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 666,
        "wires": [
            [
                "06caff33513052c5"
            ]
        ]
    },
    {
        "id": "06caff33513052c5",
        "type": "ui_text",
        "z": "b975189eeafb751a",
        "g": "34e41f087574ad65",
        "group": "57a3c8c6be82297f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Estado",
        "format": "{{msg.payload}} ",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 652,
        "y": 666,
        "wires": []
    }
]